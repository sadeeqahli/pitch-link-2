{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"./thenable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":20},"end":{"line":2,"column":47,"index":67}}],"key":"kKA5IQ5mf6XoWFagMsmQasyMyhE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"]; // src/hydration.ts\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"defaultShouldDehydrateMutation\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateMutation;\n    }\n  });\n  Object.defineProperty(exports, \"defaultShouldDehydrateQuery\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateQuery;\n    }\n  });\n  Object.defineProperty(exports, \"dehydrate\", {\n    enumerable: true,\n    get: function () {\n      return dehydrate;\n    }\n  });\n  Object.defineProperty(exports, \"hydrate\", {\n    enumerable: true,\n    get: function () {\n      return hydrate;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _objectWithoutProperties = _interopDefault(_babelRuntimeHelpersObjectWithoutProperties);\n  var _thenableJs = require(_dependencyMap[1], \"./thenable.js\");\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return {\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state,\n      ...(mutation.options.scope && {\n        scope: mutation.options.scope\n      }),\n      ...(mutation.meta && {\n        meta: mutation.meta\n      })\n    };\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    return {\n      dehydratedAt: Date.now(),\n      state: {\n        ...query.state,\n        ...(query.state.data !== void 0 && {\n          data: serializeData(query.state.data)\n        })\n      },\n      queryKey: query.queryKey,\n      queryHash: query.queryHash,\n      ...(query.state.status === \"pending\" && {\n        promise: query.promise?.then(serializeData).catch(error => {\n          if (!shouldRedactErrors(error)) {\n            return Promise.reject(error);\n          }\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n          }\n          return Promise.reject(new Error(\"redacted\"));\n        })\n      }),\n      ...(query.meta && {\n        meta: query.meta\n      })\n    };\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    var mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    var filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    var shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    var serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    var queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    var mutationCache = client.getMutationCache();\n    var queryCache = client.getQueryCache();\n    var deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    var mutations = dehydratedState.mutations || [];\n    var queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      var state = _ref.state,\n        mutationOptions = (0, _objectWithoutProperties.default)(_ref, _excluded);\n      mutationCache.build(client, {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      }, state);\n    });\n    queries.forEach(_ref2 => {\n      var queryKey = _ref2.queryKey,\n        state = _ref2.state,\n        queryHash = _ref2.queryHash,\n        meta = _ref2.meta,\n        promise = _ref2.promise,\n        dehydratedAt = _ref2.dehydratedAt;\n      var syncData = promise ? (0, _thenableJs.tryResolveSync)(promise) : void 0;\n      var rawData = state.data === void 0 ? syncData?.data : state.data;\n      var data = rawData === void 0 ? rawData : deserializeData(rawData);\n      var query = queryCache.get(queryHash);\n      var existingQueryIsPending = query?.state.status === \"pending\";\n      var existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        var hasNewerSyncData = syncData &&\n        // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          var _ignored = state.fetchStatus,\n            serializedState = (0, _objectWithoutProperties.default)(state, _excluded2);\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(client, {\n          ...client.getDefaultOptions().hydrate?.queries,\n          ...options?.defaultOptions?.queries,\n          queryKey,\n          queryHash,\n          meta\n        },\n        // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        {\n          ...state,\n          data,\n          fetchStatus: \"idle\",\n          status: data !== void 0 ? \"success\" : state.status\n        });\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && (\n      // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        void query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        });\n      }\n    });\n  }\n});","lineCount":177,"map":[[5,34,1,0],[6,2,1,0,"Object"],[6,8,1,0],[6,9,1,0,"defineProperty"],[6,23,1,0],[6,24,1,0,"exports"],[6,31,1,0],[7,4,1,0,"value"],[7,9,1,0],[8,2,1,0],[9,2,1,0],[9,11,1,0,"_interopDefault"],[9,27,1,0,"e"],[9,28,1,0],[10,4,1,0],[10,11,1,0,"e"],[10,12,1,0],[10,16,1,0,"e"],[10,17,1,0],[10,18,1,0,"__esModule"],[10,28,1,0],[10,31,1,0,"e"],[10,32,1,0],[11,6,1,0,"default"],[11,13,1,0],[11,15,1,0,"e"],[12,4,1,0],[13,2,1,0],[14,2,133,0,"Object"],[14,8,133,0],[14,9,133,0,"defineProperty"],[14,23,133,0],[14,24,133,0,"exports"],[14,31,133,0],[15,4,133,0,"enumerable"],[15,14,133,0],[16,4,133,0,"get"],[16,7,133,0],[16,18,133,0,"get"],[16,19,133,0],[17,6,133,0],[17,13,134,2,"defaultShouldDehydrateMutation"],[17,43,134,32],[18,4,134,32],[19,2,134,32],[20,2,133,0,"Object"],[20,8,133,0],[20,9,133,0,"defineProperty"],[20,23,133,0],[20,24,133,0,"exports"],[20,31,133,0],[21,4,133,0,"enumerable"],[21,14,133,0],[22,4,133,0,"get"],[22,7,133,0],[22,18,133,0,"get"],[22,19,133,0],[23,6,133,0],[23,13,135,2,"defaultShouldDehydrateQuery"],[23,40,135,29],[24,4,135,29],[25,2,135,29],[26,2,133,0,"Object"],[26,8,133,0],[26,9,133,0,"defineProperty"],[26,23,133,0],[26,24,133,0,"exports"],[26,31,133,0],[27,4,133,0,"enumerable"],[27,14,133,0],[28,4,133,0,"get"],[28,7,133,0],[28,18,133,0,"get"],[28,19,133,0],[29,6,133,0],[29,13,136,2,"dehydrate"],[29,22,136,11],[30,4,136,11],[31,2,136,11],[32,2,133,0,"Object"],[32,8,133,0],[32,9,133,0,"defineProperty"],[32,23,133,0],[32,24,133,0,"exports"],[32,31,133,0],[33,4,133,0,"enumerable"],[33,14,133,0],[34,4,133,0,"get"],[34,7,133,0],[34,18,133,0,"get"],[34,19,133,0],[35,6,133,0],[35,13,137,2,"hydrate"],[35,20,137,9],[36,4,137,9],[37,2,137,9],[38,2,138,2],[38,6,138,2,"_babelRuntimeHelpersObjectWithoutProperties"],[38,49,138,2],[38,52,138,2,"require"],[38,59,138,2],[38,60,138,2,"_dependencyMap"],[38,74,138,2],[39,2,138,2],[39,6,138,2,"_objectWithoutProperties"],[39,30,138,2],[39,33,138,2,"_interopDefault"],[39,48,138,2],[39,49,138,2,"_babelRuntimeHelpersObjectWithoutProperties"],[39,92,138,2],[40,2,2,0],[40,6,2,0,"_thenableJs"],[40,17,2,0],[40,20,2,0,"require"],[40,27,2,0],[40,28,2,0,"_dependencyMap"],[40,42,2,0],[41,2,3,0],[41,11,3,9,"defaultTransformerFn"],[41,31,3,29,"defaultTransformerFn"],[41,32,3,30,"data"],[41,36,3,34],[41,38,3,36],[42,4,4,2],[42,11,4,9,"data"],[42,15,4,13],[43,2,5,0],[44,2,6,0],[44,11,6,9,"dehydrateMutation"],[44,28,6,26,"dehydrateMutation"],[44,29,6,27,"mutation"],[44,37,6,35],[44,39,6,37],[45,4,7,2],[45,11,7,9],[46,6,8,4,"mutationKey"],[46,17,8,15],[46,19,8,17,"mutation"],[46,27,8,25],[46,28,8,26,"options"],[46,35,8,33],[46,36,8,34,"mutationKey"],[46,47,8,45],[47,6,9,4,"state"],[47,11,9,9],[47,13,9,11,"mutation"],[47,21,9,19],[47,22,9,20,"state"],[47,27,9,25],[48,6,10,4],[48,10,10,7,"mutation"],[48,18,10,15],[48,19,10,16,"options"],[48,26,10,23],[48,27,10,24,"scope"],[48,32,10,29],[48,36,10,33],[49,8,10,35,"scope"],[49,13,10,40],[49,15,10,42,"mutation"],[49,23,10,50],[49,24,10,51,"options"],[49,31,10,58],[49,32,10,59,"scope"],[50,6,10,65],[50,7,10,66],[51,6,11,4],[51,10,11,7,"mutation"],[51,18,11,15],[51,19,11,16,"meta"],[51,23,11,20],[51,27,11,24],[52,8,11,26,"meta"],[52,12,11,30],[52,14,11,32,"mutation"],[52,22,11,40],[52,23,11,41,"meta"],[53,6,11,46],[53,7,11,47],[54,4,12,2],[54,5,12,3],[55,2,13,0],[56,2,14,0],[56,11,14,9,"dehydrateQuery"],[56,25,14,23,"dehydrateQuery"],[56,26,14,24,"query"],[56,31,14,29],[56,33,14,31,"serializeData"],[56,46,14,44],[56,48,14,46,"shouldRedactErrors"],[56,66,14,64],[56,68,14,66],[57,4,15,2],[57,11,15,9],[58,6,16,4,"dehydratedAt"],[58,18,16,16],[58,20,16,18,"Date"],[58,24,16,22],[58,25,16,23,"now"],[58,28,16,26],[58,29,16,27],[58,30,16,28],[59,6,17,4,"state"],[59,11,17,9],[59,13,17,11],[60,8,18,6],[60,11,18,9,"query"],[60,16,18,14],[60,17,18,15,"state"],[60,22,18,20],[61,8,19,6],[61,12,19,9,"query"],[61,17,19,14],[61,18,19,15,"state"],[61,23,19,20],[61,24,19,21,"data"],[61,28,19,25],[61,33,19,30],[61,38,19,35],[61,39,19,36],[61,43,19,40],[62,10,20,8,"data"],[62,14,20,12],[62,16,20,14,"serializeData"],[62,29,20,27],[62,30,20,28,"query"],[62,35,20,33],[62,36,20,34,"state"],[62,41,20,39],[62,42,20,40,"data"],[62,46,20,44],[63,8,21,6],[63,9,21,7],[64,6,22,4],[64,7,22,5],[65,6,23,4,"queryKey"],[65,14,23,12],[65,16,23,14,"query"],[65,21,23,19],[65,22,23,20,"queryKey"],[65,30,23,28],[66,6,24,4,"queryHash"],[66,15,24,13],[66,17,24,15,"query"],[66,22,24,20],[66,23,24,21,"queryHash"],[66,32,24,30],[67,6,25,4],[67,10,25,7,"query"],[67,15,25,12],[67,16,25,13,"state"],[67,21,25,18],[67,22,25,19,"status"],[67,28,25,25],[67,33,25,30],[67,42,25,39],[67,46,25,43],[68,8,26,6,"promise"],[68,15,26,13],[68,17,26,15,"query"],[68,22,26,20],[68,23,26,21,"promise"],[68,30,26,28],[68,32,26,30,"then"],[68,36,26,34],[68,37,26,35,"serializeData"],[68,50,26,48],[68,51,26,49],[68,52,26,50,"catch"],[68,57,26,55],[68,58,26,57,"error"],[68,63,26,62],[68,67,26,67],[69,10,27,8],[69,14,27,12],[69,15,27,13,"shouldRedactErrors"],[69,33,27,31],[69,34,27,32,"error"],[69,39,27,37],[69,40,27,38],[69,42,27,40],[70,12,28,10],[70,19,28,17,"Promise"],[70,26,28,24],[70,27,28,25,"reject"],[70,33,28,31],[70,34,28,32,"error"],[70,39,28,37],[70,40,28,38],[71,10,29,8],[72,10,30,8],[72,14,30,12,"process"],[72,21,30,19],[72,22,30,20,"env"],[72,25,30,23],[72,26,30,24,"NODE_ENV"],[72,34,30,32],[72,39,30,37],[72,51,30,49],[72,53,30,51],[73,12,31,10,"console"],[73,19,31,17],[73,20,31,18,"error"],[73,25,31,23],[73,26,32,12],[73,89,32,75,"query"],[73,94,32,80],[73,95,32,81,"queryHash"],[73,104,32,90],[73,110,32,96,"error"],[73,115,32,101],[73,166,33,10],[73,167,33,11],[74,10,34,8],[75,10,35,8],[75,17,35,15,"Promise"],[75,24,35,22],[75,25,35,23,"reject"],[75,31,35,29],[75,32,35,30],[75,36,35,34,"Error"],[75,41,35,39],[75,42,35,40],[75,52,35,50],[75,53,35,51],[75,54,35,52],[76,8,36,6],[76,9,36,7],[77,6,37,4],[77,7,37,5],[78,6,38,4],[78,10,38,7,"query"],[78,15,38,12],[78,16,38,13,"meta"],[78,20,38,17],[78,24,38,21],[79,8,38,23,"meta"],[79,12,38,27],[79,14,38,29,"query"],[79,19,38,34],[79,20,38,35,"meta"],[80,6,38,40],[80,7,38,41],[81,4,39,2],[81,5,39,3],[82,2,40,0],[83,2,41,0],[83,11,41,9,"defaultShouldDehydrateMutation"],[83,41,41,39,"defaultShouldDehydrateMutation"],[83,42,41,40,"mutation"],[83,50,41,48],[83,52,41,50],[84,4,42,2],[84,11,42,9,"mutation"],[84,19,42,17],[84,20,42,18,"state"],[84,25,42,23],[84,26,42,24,"isPaused"],[84,34,42,32],[85,2,43,0],[86,2,44,0],[86,11,44,9,"defaultShouldDehydrateQuery"],[86,38,44,36,"defaultShouldDehydrateQuery"],[86,39,44,37,"query"],[86,44,44,42],[86,46,44,44],[87,4,45,2],[87,11,45,9,"query"],[87,16,45,14],[87,17,45,15,"state"],[87,22,45,20],[87,23,45,21,"status"],[87,29,45,27],[87,34,45,32],[87,43,45,41],[88,2,46,0],[89,2,47,0],[89,11,47,9,"defaultShouldRedactErrors"],[89,36,47,34,"defaultShouldRedactErrors"],[89,37,47,35,"_"],[89,38,47,36],[89,40,47,38],[90,4,48,2],[90,11,48,9],[90,15,48,13],[91,2,49,0],[92,2,50,0],[92,11,50,9,"dehydrate"],[92,20,50,18,"dehydrate"],[92,21,50,19,"client"],[92,27,50,25],[92,29,50,41],[93,4,50,41],[93,8,50,27,"options"],[93,15,50,34],[93,18,50,34,"arguments"],[93,27,50,34],[93,28,50,34,"length"],[93,34,50,34],[93,42,50,34,"arguments"],[93,51,50,34],[93,59,50,34,"undefined"],[93,68,50,34],[93,71,50,34,"arguments"],[93,80,50,34],[93,86,50,37],[93,87,50,38],[93,88,50,39],[94,4,51,2],[94,8,51,8,"filterMutation"],[94,22,51,22],[94,25,51,25,"options"],[94,32,51,32],[94,33,51,33,"shouldDehydrateMutation"],[94,56,51,56],[94,60,51,60,"client"],[94,66,51,66],[94,67,51,67,"getDefaultOptions"],[94,84,51,84],[94,85,51,85],[94,86,51,86],[94,87,51,87,"dehydrate"],[94,96,51,96],[94,98,51,98,"shouldDehydrateMutation"],[94,121,51,121],[94,125,51,125,"defaultShouldDehydrateMutation"],[94,155,51,155],[95,4,52,2],[95,8,52,8,"mutations"],[95,17,52,17],[95,20,52,20,"client"],[95,26,52,26],[95,27,52,27,"getMutationCache"],[95,43,52,43],[95,44,52,44],[95,45,52,45],[95,46,52,46,"getAll"],[95,52,52,52],[95,53,52,53],[95,54,52,54],[95,55,52,55,"flatMap"],[95,62,52,62],[95,63,53,5,"mutation"],[95,71,53,13],[95,75,53,18,"filterMutation"],[95,89,53,32],[95,90,53,33,"mutation"],[95,98,53,41],[95,99,53,42],[95,102,53,45],[95,103,53,46,"dehydrateMutation"],[95,120,53,63],[95,121,53,64,"mutation"],[95,129,53,72],[95,130,53,73],[95,131,53,74],[95,134,53,77],[95,136,54,2],[95,137,54,3],[96,4,55,2],[96,8,55,8,"filterQuery"],[96,19,55,19],[96,22,55,22,"options"],[96,29,55,29],[96,30,55,30,"shouldDehydrateQuery"],[96,50,55,50],[96,54,55,54,"client"],[96,60,55,60],[96,61,55,61,"getDefaultOptions"],[96,78,55,78],[96,79,55,79],[96,80,55,80],[96,81,55,81,"dehydrate"],[96,90,55,90],[96,92,55,92,"shouldDehydrateQuery"],[96,112,55,112],[96,116,55,116,"defaultShouldDehydrateQuery"],[96,143,55,143],[97,4,56,2],[97,8,56,8,"shouldRedactErrors"],[97,26,56,26],[97,29,56,29,"options"],[97,36,56,36],[97,37,56,37,"shouldRedactErrors"],[97,55,56,55],[97,59,56,59,"client"],[97,65,56,65],[97,66,56,66,"getDefaultOptions"],[97,83,56,83],[97,84,56,84],[97,85,56,85],[97,86,56,86,"dehydrate"],[97,95,56,95],[97,97,56,97,"shouldRedactErrors"],[97,115,56,115],[97,119,56,119,"defaultShouldRedactErrors"],[97,144,56,144],[98,4,57,2],[98,8,57,8,"serializeData"],[98,21,57,21],[98,24,57,24,"options"],[98,31,57,31],[98,32,57,32,"serializeData"],[98,45,57,45],[98,49,57,49,"client"],[98,55,57,55],[98,56,57,56,"getDefaultOptions"],[98,73,57,73],[98,74,57,74],[98,75,57,75],[98,76,57,76,"dehydrate"],[98,85,57,85],[98,87,57,87,"serializeData"],[98,100,57,100],[98,104,57,104,"defaultTransformerFn"],[98,124,57,124],[99,4,58,2],[99,8,58,8,"queries"],[99,15,58,15],[99,18,58,18,"client"],[99,24,58,24],[99,25,58,25,"getQueryCache"],[99,38,58,38],[99,39,58,39],[99,40,58,40],[99,41,58,41,"getAll"],[99,47,58,47],[99,48,58,48],[99,49,58,49],[99,50,58,50,"flatMap"],[99,57,58,57],[99,58,59,5,"query"],[99,63,59,10],[99,67,59,15,"filterQuery"],[99,78,59,26],[99,79,59,27,"query"],[99,84,59,32],[99,85,59,33],[99,88,59,36],[99,89,59,37,"dehydrateQuery"],[99,103,59,51],[99,104,59,52,"query"],[99,109,59,57],[99,111,59,59,"serializeData"],[99,124,59,72],[99,126,59,74,"shouldRedactErrors"],[99,144,59,92],[99,145,59,93],[99,146,59,94],[99,149,59,97],[99,151,60,2],[99,152,60,3],[100,4,61,2],[100,11,61,9],[101,6,61,11,"mutations"],[101,15,61,20],[102,6,61,22,"queries"],[103,4,61,30],[103,5,61,31],[104,2,62,0],[105,2,63,0],[105,11,63,9,"hydrate"],[105,18,63,16,"hydrate"],[105,19,63,17,"client"],[105,25,63,23],[105,27,63,25,"dehydratedState"],[105,42,63,40],[105,44,63,42,"options"],[105,51,63,49],[105,53,63,51],[106,4,64,2],[106,8,64,6],[106,15,64,13,"dehydratedState"],[106,30,64,28],[106,35,64,33],[106,43,64,41],[106,47,64,45,"dehydratedState"],[106,62,64,60],[106,67,64,65],[106,71,64,69],[106,73,64,71],[107,6,65,4],[108,4,66,2],[109,4,67,2],[109,8,67,8,"mutationCache"],[109,21,67,21],[109,24,67,24,"client"],[109,30,67,30],[109,31,67,31,"getMutationCache"],[109,47,67,47],[109,48,67,48],[109,49,67,49],[110,4,68,2],[110,8,68,8,"queryCache"],[110,18,68,18],[110,21,68,21,"client"],[110,27,68,27],[110,28,68,28,"getQueryCache"],[110,41,68,41],[110,42,68,42],[110,43,68,43],[111,4,69,2],[111,8,69,8,"deserializeData"],[111,23,69,23],[111,26,69,26,"options"],[111,33,69,33],[111,35,69,35,"defaultOptions"],[111,49,69,49],[111,51,69,51,"deserializeData"],[111,66,69,66],[111,70,69,70,"client"],[111,76,69,76],[111,77,69,77,"getDefaultOptions"],[111,94,69,94],[111,95,69,95],[111,96,69,96],[111,97,69,97,"hydrate"],[111,104,69,104],[111,106,69,106,"deserializeData"],[111,121,69,121],[111,125,69,125,"defaultTransformerFn"],[111,145,69,145],[112,4,70,2],[112,8,70,8,"mutations"],[112,17,70,17],[112,20,70,20,"dehydratedState"],[112,35,70,35],[112,36,70,36,"mutations"],[112,45,70,45],[112,49,70,49],[112,51,70,51],[113,4,71,2],[113,8,71,8,"queries"],[113,15,71,15],[113,18,71,18,"dehydratedState"],[113,33,71,33],[113,34,71,34,"queries"],[113,41,71,41],[113,45,71,45],[113,47,71,47],[114,4,72,2,"mutations"],[114,13,72,11],[114,14,72,12,"forEach"],[114,21,72,19],[114,22,72,20,"_ref"],[114,26,72,20],[114,30,72,55],[115,6,72,55],[115,10,72,23,"state"],[115,15,72,28],[115,18,72,28,"_ref"],[115,22,72,28],[115,23,72,23,"state"],[115,28,72,28],[116,8,72,33,"mutationOptions"],[116,23,72,48],[116,30,72,48,"_objectWithoutProperties"],[116,54,72,48],[116,55,72,48,"default"],[116,62,72,48],[116,64,72,48,"_ref"],[116,68,72,48],[116,70,72,48,"_excluded"],[116,79,72,48],[117,6,73,4,"mutationCache"],[117,19,73,17],[117,20,73,18,"build"],[117,25,73,23],[117,26,74,6,"client"],[117,32,74,12],[117,34,75,6],[118,8,76,8],[118,11,76,11,"client"],[118,17,76,17],[118,18,76,18,"getDefaultOptions"],[118,35,76,35],[118,36,76,36],[118,37,76,37],[118,38,76,38,"hydrate"],[118,45,76,45],[118,47,76,47,"mutations"],[118,56,76,56],[119,8,77,8],[119,11,77,11,"options"],[119,18,77,18],[119,20,77,20,"defaultOptions"],[119,34,77,34],[119,36,77,36,"mutations"],[119,45,77,45],[120,8,78,8],[120,11,78,11,"mutationOptions"],[121,6,79,6],[121,7,79,7],[121,9,80,6,"state"],[121,14,81,4],[121,15,81,5],[122,4,82,2],[122,5,82,3],[122,6,82,4],[123,4,83,2,"queries"],[123,11,83,9],[123,12,83,10,"forEach"],[123,19,83,17],[123,20,84,4,"_ref2"],[123,25,84,4],[123,29,84,69],[124,6,84,69],[124,10,84,7,"queryKey"],[124,18,84,15],[124,21,84,15,"_ref2"],[124,26,84,15],[124,27,84,7,"queryKey"],[124,35,84,15],[125,8,84,17,"state"],[125,13,84,22],[125,16,84,22,"_ref2"],[125,21,84,22],[125,22,84,17,"state"],[125,27,84,22],[126,8,84,24,"queryHash"],[126,17,84,33],[126,20,84,33,"_ref2"],[126,25,84,33],[126,26,84,24,"queryHash"],[126,35,84,33],[127,8,84,35,"meta"],[127,12,84,39],[127,15,84,39,"_ref2"],[127,20,84,39],[127,21,84,35,"meta"],[127,25,84,39],[128,8,84,41,"promise"],[128,15,84,48],[128,18,84,48,"_ref2"],[128,23,84,48],[128,24,84,41,"promise"],[128,31,84,48],[129,8,84,50,"dehydratedAt"],[129,20,84,62],[129,23,84,62,"_ref2"],[129,28,84,62],[129,29,84,50,"dehydratedAt"],[129,41,84,62],[130,6,85,6],[130,10,85,12,"syncData"],[130,18,85,20],[130,21,85,23,"promise"],[130,28,85,30],[130,31,85,33],[130,35,85,33,"tryResolveSync"],[130,46,85,47],[130,47,85,47,"tryResolveSync"],[130,61,85,47],[130,63,85,48,"promise"],[130,70,85,55],[130,71,85,56],[130,74,85,59],[130,79,85,64],[130,80,85,65],[131,6,86,6],[131,10,86,12,"rawData"],[131,17,86,19],[131,20,86,22,"state"],[131,25,86,27],[131,26,86,28,"data"],[131,30,86,32],[131,35,86,37],[131,40,86,42],[131,41,86,43],[131,44,86,46,"syncData"],[131,52,86,54],[131,54,86,56,"data"],[131,58,86,60],[131,61,86,63,"state"],[131,66,86,68],[131,67,86,69,"data"],[131,71,86,73],[132,6,87,6],[132,10,87,12,"data"],[132,14,87,16],[132,17,87,19,"rawData"],[132,24,87,26],[132,29,87,31],[132,34,87,36],[132,35,87,37],[132,38,87,40,"rawData"],[132,45,87,47],[132,48,87,50,"deserializeData"],[132,63,87,65],[132,64,87,66,"rawData"],[132,71,87,73],[132,72,87,74],[133,6,88,6],[133,10,88,10,"query"],[133,15,88,15],[133,18,88,18,"queryCache"],[133,28,88,28],[133,29,88,29,"get"],[133,32,88,32],[133,33,88,33,"queryHash"],[133,42,88,42],[133,43,88,43],[134,6,89,6],[134,10,89,12,"existingQueryIsPending"],[134,32,89,34],[134,35,89,37,"query"],[134,40,89,42],[134,42,89,44,"state"],[134,47,89,49],[134,48,89,50,"status"],[134,54,89,56],[134,59,89,61],[134,68,89,70],[135,6,90,6],[135,10,90,12,"existingQueryIsFetching"],[135,33,90,35],[135,36,90,38,"query"],[135,41,90,43],[135,43,90,45,"state"],[135,48,90,50],[135,49,90,51,"fetchStatus"],[135,60,90,62],[135,65,90,67],[135,75,90,77],[136,6,91,6],[136,10,91,10,"query"],[136,15,91,15],[136,17,91,17],[137,8,92,8],[137,12,92,14,"hasNewerSyncData"],[137,28,92,30],[137,31,92,33,"syncData"],[137,39,92,41],[138,8,92,45],[139,8,93,8],[140,8,94,8,"dehydratedAt"],[140,20,94,20],[140,25,94,25],[140,30,94,30],[140,31,94,31],[140,35,94,35,"dehydratedAt"],[140,47,94,47],[140,50,94,50,"query"],[140,55,94,55],[140,56,94,56,"state"],[140,61,94,61],[140,62,94,62,"dataUpdatedAt"],[140,75,94,75],[141,8,95,8],[141,12,95,12,"state"],[141,17,95,17],[141,18,95,18,"dataUpdatedAt"],[141,31,95,31],[141,34,95,34,"query"],[141,39,95,39],[141,40,95,40,"state"],[141,45,95,45],[141,46,95,46,"dataUpdatedAt"],[141,59,95,59],[141,63,95,63,"hasNewerSyncData"],[141,79,95,79],[141,81,95,81],[142,10,96,10],[142,14,96,31,"_ignored"],[142,22,96,39],[142,25,96,64,"state"],[142,30,96,69],[142,31,96,18,"fetchStatus"],[142,42,96,29],[143,12,96,44,"serializedState"],[143,27,96,59],[143,34,96,59,"_objectWithoutProperties"],[143,58,96,59],[143,59,96,59,"default"],[143,66,96,59],[143,68,96,64,"state"],[143,73,96,69],[143,75,96,69,"_excluded2"],[143,85,96,69],[144,10,97,10,"query"],[144,15,97,15],[144,16,97,16,"setState"],[144,24,97,24],[144,25,97,25],[145,12,98,12],[145,15,98,15,"serializedState"],[145,30,98,30],[146,12,99,12,"data"],[147,10,100,10],[147,11,100,11],[147,12,100,12],[148,8,101,8],[149,6,102,6],[149,7,102,7],[149,13,102,13],[150,8,103,8,"query"],[150,13,103,13],[150,16,103,16,"queryCache"],[150,26,103,26],[150,27,103,27,"build"],[150,32,103,32],[150,33,104,10,"client"],[150,39,104,16],[150,41,105,10],[151,10,106,12],[151,13,106,15,"client"],[151,19,106,21],[151,20,106,22,"getDefaultOptions"],[151,37,106,39],[151,38,106,40],[151,39,106,41],[151,40,106,42,"hydrate"],[151,47,106,49],[151,49,106,51,"queries"],[151,56,106,58],[152,10,107,12],[152,13,107,15,"options"],[152,20,107,22],[152,22,107,24,"defaultOptions"],[152,36,107,38],[152,38,107,40,"queries"],[152,45,107,47],[153,10,108,12,"queryKey"],[153,18,108,20],[154,10,109,12,"queryHash"],[154,19,109,21],[155,10,110,12,"meta"],[156,8,111,10],[156,9,111,11],[157,8,112,10],[158,8,113,10],[159,8,114,10],[160,10,115,12],[160,13,115,15,"state"],[160,18,115,20],[161,10,116,12,"data"],[161,14,116,16],[162,10,117,12,"fetchStatus"],[162,21,117,23],[162,23,117,25],[162,29,117,31],[163,10,118,12,"status"],[163,16,118,18],[163,18,118,20,"data"],[163,22,118,24],[163,27,118,29],[163,32,118,34],[163,33,118,35],[163,36,118,38],[163,45,118,47],[163,48,118,50,"state"],[163,53,118,55],[163,54,118,56,"status"],[164,8,119,10],[164,9,120,8],[164,10,120,9],[165,6,121,6],[166,6,122,6],[166,10,122,10,"promise"],[166,17,122,17],[166,21,122,21],[166,22,122,22,"existingQueryIsPending"],[166,44,122,44],[166,48,122,48],[166,49,122,49,"existingQueryIsFetching"],[166,72,122,72],[167,6,122,76],[168,6,123,6],[169,6,124,7,"dehydratedAt"],[169,18,124,19],[169,23,124,24],[169,28,124,29],[169,29,124,30],[169,33,124,34,"dehydratedAt"],[169,45,124,46],[169,48,124,49,"query"],[169,53,124,54],[169,54,124,55,"state"],[169,59,124,60],[169,60,124,61,"dataUpdatedAt"],[169,73,124,74],[169,74,124,75],[169,76,124,77],[170,8,125,8],[170,13,125,13,"query"],[170,18,125,18],[170,19,125,19,"fetch"],[170,24,125,24],[170,25,125,25],[170,30,125,30],[170,31,125,31],[170,33,125,33],[171,10,126,10],[172,10,127,10,"initialPromise"],[172,24,127,24],[172,26,127,26,"Promise"],[172,33,127,33],[172,34,127,34,"resolve"],[172,41,127,41],[172,42,127,42,"promise"],[172,49,127,49],[172,50,127,50],[172,51,127,51,"then"],[172,55,127,55],[172,56,127,56,"deserializeData"],[172,71,127,71],[173,8,128,8],[173,9,128,9],[173,10,128,10],[174,6,129,6],[175,4,130,4],[175,5,131,2],[175,6,131,3],[176,2,132,0],[177,0,132,1],[177,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACE;CDE;AEC;CFO;AGC;wDCY;ODU;CHI;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;IEE;KF8C;CXE"},"hasCjsExports":false},"type":"js/module"}]}