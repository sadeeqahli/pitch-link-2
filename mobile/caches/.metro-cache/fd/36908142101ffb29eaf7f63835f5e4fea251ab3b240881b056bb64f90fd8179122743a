{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":68,"index":83}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./Image","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":85},"end":{"line":5,"column":32,"index":117}}],"key":"I2Mr3f3chxmh02krEQCRqYY9hRA=","exportNames":["*"],"imports":1}},{"name":"./utils/resolveSources","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":196},"end":{"line":7,"column":55,"index":251}}],"key":"DpM65pxwg+MyXfeuGazS5AMaNMU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useImage = useImage;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var _Image = require(_dependencyMap[2], \"./Image\");\n  var _utilsResolveSources = require(_dependencyMap[3], \"./utils/resolveSources\");\n  /**\n   * A hook that loads an image from the given source and returns a reference\n   * to the native image instance, or `null` until the first image is successfully loaded.\n   *\n   * It loads a new image every time the `uri` of the provided source changes.\n   * To trigger reloads in some other scenarios, you can provide an additional dependency list.\n   * @platform android\n   * @platform ios\n   * @platform web\n   *\n   * @example\n   * ```ts\n   * import { useImage, Image } from 'expo-image';\n   * import { Text } from 'react-native';\n   *\n   * export default function MyImage() {\n   *   const image = useImage('https://picsum.photos/1000/800', {\n   *     maxWidth: 800,\n   *     onError(error, retry) {\n   *       console.error('Loading failed:', error.message);\n   *     }\n   *   });\n   *\n   *   if (!image) {\n   *     return <Text>Image is loading...</Text>;\n   *   }\n   *\n   *   return <Image source={image} style={{ width: image.width / 2, height: image.height / 2 }} />;\n   * }\n   * ```\n   */\n  function useImage(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var dependencies = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var resolvedSource = (0, _utilsResolveSources.resolveSource)(source);\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n    // Since options are not dependencies of the below effect, we store them in a ref.\n    // Once the image is asynchronously loaded, the effect will use the most recent options,\n    // instead of the captured ones (especially important for callbacks that may change in subsequent renders).\n    var optionsRef = (0, _react.useRef)(options);\n    optionsRef.current = options;\n    (0, _react.useEffect)(() => {\n      // We're doing some asynchronous action in this effect, so we should keep track\n      // if the effect was already cleaned up. In that case, the async action shouldn't change the state.\n      var isEffectValid = true;\n      function loadImage() {\n        _Image.Image.loadAsync(resolvedSource, options).then(image => {\n          if (isEffectValid) {\n            setImage(image);\n          }\n        }).catch(error => {\n          if (!isEffectValid) {\n            return;\n          }\n          if (optionsRef.current.onError) {\n            optionsRef.current.onError(error, loadImage);\n          } else {\n            // Print unhandled errors to the console.\n            console.error(`Loading an image from '${resolvedSource.uri}' failed, use 'onError' option to handle errors and suppress this message`);\n            console.error(error);\n          }\n        });\n      }\n      loadImage();\n      return () => {\n        // Invalidate the effect and release the shared object to free up memory.\n        isEffectValid = false;\n        image?.release();\n      };\n    }, [resolvedSource.uri, ...dependencies]);\n    return image;\n  }\n});","lineCount":95,"map":[[2,2,1,0],[2,14,1,12],[3,2,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13],[8,11,1,13,"_interopDefault"],[8,27,1,13,"e"],[8,28,1,13],[9,4,1,13],[9,11,1,13,"e"],[9,12,1,13],[9,16,1,13,"e"],[9,17,1,13],[9,18,1,13,"__esModule"],[9,28,1,13],[9,31,1,13,"e"],[9,32,1,13],[10,6,1,13,"default"],[10,13,1,13],[10,15,1,13,"e"],[11,4,1,13],[12,2,1,13],[13,2,40,0,"exports"],[13,9,40,0],[13,10,40,0,"useImage"],[13,18,40,0],[13,21,40,0,"useImage"],[13,29,40,0],[14,2,92,1],[14,6,92,1,"_babelRuntimeHelpersSlicedToArray"],[14,39,92,1],[14,42,92,1,"require"],[14,49,92,1],[14,50,92,1,"_dependencyMap"],[14,64,92,1],[15,2,92,1],[15,6,92,1,"_slicedToArray"],[15,20,92,1],[15,23,92,1,"_interopDefault"],[15,38,92,1],[15,39,92,1,"_babelRuntimeHelpersSlicedToArray"],[15,72,92,1],[16,2,3,0],[16,6,3,0,"_react"],[16,12,3,0],[16,15,3,0,"require"],[16,22,3,0],[16,23,3,0,"_dependencyMap"],[16,37,3,0],[17,2,5,0],[17,6,5,0,"_Image"],[17,12,5,0],[17,15,5,0,"require"],[17,22,5,0],[17,23,5,0,"_dependencyMap"],[17,37,5,0],[18,2,7,0],[18,6,7,0,"_utilsResolveSources"],[18,26,7,0],[18,29,7,0,"require"],[18,36,7,0],[18,37,7,0,"_dependencyMap"],[18,51,7,0],[19,2,9,0],[20,0,10,0],[21,0,11,0],[22,0,12,0],[23,0,13,0],[24,0,14,0],[25,0,15,0],[26,0,16,0],[27,0,17,0],[28,0,18,0],[29,0,19,0],[30,0,20,0],[31,0,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[35,0,25,0],[36,0,26,0],[37,0,27,0],[38,0,28,0],[39,0,29,0],[40,0,30,0],[41,0,31,0],[42,0,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,2,40,7],[50,11,40,16,"useImage"],[50,19,40,24,"useImage"],[50,20,41,2,"source"],[50,26,41,39],[50,28,44,19],[51,4,44,19],[51,8,42,2,"options"],[51,15,42,27],[51,18,42,27,"arguments"],[51,27,42,27],[51,28,42,27,"length"],[51,34,42,27],[51,42,42,27,"arguments"],[51,51,42,27],[51,59,42,27,"undefined"],[51,68,42,27],[51,71,42,27,"arguments"],[51,80,42,27],[51,86,42,30],[51,87,42,31],[51,88,42,32],[52,4,42,32],[52,8,43,2,"dependencies"],[52,20,43,30],[52,23,43,30,"arguments"],[52,32,43,30],[52,33,43,30,"length"],[52,39,43,30],[52,47,43,30,"arguments"],[52,56,43,30],[52,64,43,30,"undefined"],[52,73,43,30],[52,76,43,30,"arguments"],[52,85,43,30],[52,91,43,33],[52,93,43,35],[53,4,45,2],[53,8,45,8,"resolvedSource"],[53,22,45,22],[53,25,45,25],[53,29,45,25,"resolveSource"],[53,49,45,38],[53,50,45,38,"resolveSource"],[53,63,45,38],[53,65,45,39,"source"],[53,71,45,45],[53,72,45,61],[54,4,46,2],[54,8,46,2,"_useState"],[54,17,46,2],[54,20,46,28],[54,24,46,28,"useState"],[54,30,46,36],[54,31,46,36,"useState"],[54,39,46,36],[54,41,46,54],[54,45,46,58],[54,46,46,59],[55,6,46,59,"_useState2"],[55,16,46,59],[55,23,46,59,"_slicedToArray"],[55,37,46,59],[55,38,46,59,"default"],[55,45,46,59],[55,47,46,59,"_useState"],[55,56,46,59],[56,6,46,9,"image"],[56,11,46,14],[56,14,46,14,"_useState2"],[56,24,46,14],[57,6,46,16,"setImage"],[57,14,46,24],[57,17,46,24,"_useState2"],[57,27,46,24],[59,4,48,2],[60,4,49,2],[61,4,50,2],[62,4,51,2],[62,8,51,8,"optionsRef"],[62,18,51,18],[62,21,51,21],[62,25,51,21,"useRef"],[62,31,51,27],[62,32,51,27,"useRef"],[62,38,51,27],[62,40,51,46,"options"],[62,47,51,53],[62,48,51,54],[63,4,52,2,"optionsRef"],[63,14,52,12],[63,15,52,13,"current"],[63,22,52,20],[63,25,52,23,"options"],[63,32,52,30],[64,4,54,2],[64,8,54,2,"useEffect"],[64,14,54,11],[64,15,54,11,"useEffect"],[64,24,54,11],[64,26,54,12],[64,32,54,18],[65,6,55,4],[66,6,56,4],[67,6,57,4],[67,10,57,8,"isEffectValid"],[67,23,57,21],[67,26,57,24],[67,30,57,28],[68,6,59,4],[68,15,59,13,"loadImage"],[68,24,59,22,"loadImage"],[68,25,59,22],[68,27,59,25],[69,8,60,6,"Image"],[69,14,60,11],[69,15,60,11,"Image"],[69,20,60,11],[69,21,60,12,"loadAsync"],[69,30,60,21],[69,31,60,22,"resolvedSource"],[69,45,60,36],[69,47,60,38,"options"],[69,54,60,45],[69,55,60,46],[69,56,61,9,"then"],[69,60,61,13],[69,61,61,15,"image"],[69,66,61,20],[69,70,61,25],[70,10,62,10],[70,14,62,14,"isEffectValid"],[70,27,62,27],[70,29,62,29],[71,12,63,12,"setImage"],[71,20,63,20],[71,21,63,21,"image"],[71,26,63,26],[71,27,63,27],[72,10,64,10],[73,8,65,8],[73,9,65,9],[73,10,65,10],[73,11,66,9,"catch"],[73,16,66,14],[73,17,66,16,"error"],[73,22,66,21],[73,26,66,26],[74,10,67,10],[74,14,67,14],[74,15,67,15,"isEffectValid"],[74,28,67,28],[74,30,67,30],[75,12,68,12],[76,10,69,10],[77,10,70,10],[77,14,70,14,"optionsRef"],[77,24,70,24],[77,25,70,25,"current"],[77,32,70,32],[77,33,70,33,"onError"],[77,40,70,40],[77,42,70,42],[78,12,71,12,"optionsRef"],[78,22,71,22],[78,23,71,23,"current"],[78,30,71,30],[78,31,71,31,"onError"],[78,38,71,38],[78,39,71,39,"error"],[78,44,71,44],[78,46,71,46,"loadImage"],[78,55,71,55],[78,56,71,56],[79,10,72,10],[79,11,72,11],[79,17,72,17],[80,12,73,12],[81,12,74,12,"console"],[81,19,74,19],[81,20,74,20,"error"],[81,25,74,25],[81,26,75,14],[81,52,75,40,"resolvedSource"],[81,66,75,54],[81,67,75,55,"uri"],[81,70,75,58],[81,145,76,12],[81,146,76,13],[82,12,77,12,"console"],[82,19,77,19],[82,20,77,20,"error"],[82,25,77,25],[82,26,77,26,"error"],[82,31,77,31],[82,32,77,32],[83,10,78,10],[84,8,79,8],[84,9,79,9],[84,10,79,10],[85,6,80,4],[86,6,82,4,"loadImage"],[86,15,82,13],[86,16,82,14],[86,17,82,15],[87,6,84,4],[87,13,84,11],[87,19,84,17],[88,8,85,6],[89,8,86,6,"isEffectValid"],[89,21,86,19],[89,24,86,22],[89,29,86,27],[90,8,87,6,"image"],[90,13,87,11],[90,15,87,13,"release"],[90,22,87,20],[90,23,87,21],[90,24,87,22],[91,6,88,4],[91,7,88,5],[92,4,89,2],[92,5,89,3],[92,7,89,5],[92,8,89,6,"resolvedSource"],[92,22,89,20],[92,23,89,21,"uri"],[92,26,89,24],[92,28,89,26],[92,31,89,29,"dependencies"],[92,43,89,41],[92,44,89,42],[92,45,89,43],[93,4,91,2],[93,11,91,9,"image"],[93,16,91,14],[94,2,92,0],[95,0,92,1],[95,3]],"functionMap":{"names":["<global>","useImage","useEffect$argument_0","loadImage","Image.loadAsync.then$argument_0","Image.loadAsync.then._catch$argument_0","<anonymous>"],"mappings":"AAA;OCuC;YCc;ICK;cCE;SDI;eEC;SFa;KDC;WII;KJI;GDC;CDG"},"hasCjsExports":false},"type":"js/module"}]}