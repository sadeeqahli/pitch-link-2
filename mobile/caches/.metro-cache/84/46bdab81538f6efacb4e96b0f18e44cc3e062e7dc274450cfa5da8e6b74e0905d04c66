{"dependencies":[{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":168},"end":{"line":5,"column":52,"index":203}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":21,"index":226},"end":{"line":6,"column":49,"index":254}}],"key":"JdWyQHWvvi7kws4n0MhZWUpiB2c=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":272},"end":{"line":7,"column":32,"index":288}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./withLayoutContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":28,"index":318},"end":{"line":8,"column":58,"index":348}}],"key":"uI8DQ+0pBl5vWiQx60egJpSWI0Q=","exportNames":["*"],"imports":1}},{"name":"../fork/native-stack/createNativeStackNavigator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":37,"index":387},"end":{"line":9,"column":95,"index":445}}],"key":"RHp/c21WVHqsHHhJDMS04wvWTG0=","exportNames":["*"],"imports":1}},{"name":"../link/preview/LinkPreviewContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":29,"index":476},"end":{"line":10,"column":74,"index":521}}],"key":"XkVRz5U0xvqSwEsOtfEUIaEk8Lg=","exportNames":["*"],"imports":1}},{"name":"../navigationParams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":27,"index":550},"end":{"line":11,"column":57,"index":580}}],"key":"KeDGhIQYe7bEwtueZKPQrXQYcV0=","exportNames":["*"],"imports":1}},{"name":"../useScreens","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":21,"index":603},"end":{"line":12,"column":45,"index":627}}],"key":"8gimF/GgYNRJ+ojtiVDaShLJVrk=","exportNames":["*"],"imports":1}},{"name":"../views/Protected","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":649},"end":{"line":13,"column":49,"index":678}}],"key":"k1+uDYZ/MvJqE4WVPvI1cbQswMs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  var _reactJsxDevRuntime = require(_dependencyMap[0], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/Users/macbookair/Desktop/untitled folder/sadeeq/pitch-link-2/mobile/node_modules/expo-router/build/layouts/StackClient.js\";\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackRouter = exports.stackRouterOverride = void 0;\n  var native_1 = require(_dependencyMap[1], \"@react-navigation/native\");\n  var non_secure_1 = require(_dependencyMap[2], \"nanoid/non-secure\");\n  var react_1 = require(_dependencyMap[3], \"react\");\n  var withLayoutContext_1 = require(_dependencyMap[4], \"./withLayoutContext\");\n  var createNativeStackNavigator_1 = require(_dependencyMap[5], \"../fork/native-stack/createNativeStackNavigator\");\n  var LinkPreviewContext_1 = require(_dependencyMap[6], \"../link/preview/LinkPreviewContext\");\n  var navigationParams_1 = require(_dependencyMap[7], \"../navigationParams\");\n  var useScreens_1 = require(_dependencyMap[8], \"../useScreens\");\n  var Protected_1 = require(_dependencyMap[9], \"../views/Protected\");\n  var NativeStackNavigator = (0, createNativeStackNavigator_1.createNativeStackNavigator)().Navigator;\n  var RNStack = (0, withLayoutContext_1.withLayoutContext)(NativeStackNavigator);\n  function isStackAction(action) {\n    return action.type === 'PUSH' || action.type === 'NAVIGATE' || action.type === 'POP' || action.type === 'POP_TO_TOP' || action.type === 'REPLACE' || action.type === 'PRELOAD';\n  }\n  var isPreviewAction = action => !!action.payload && 'params' in action.payload && typeof action.payload.params === 'object' && !!(0, navigationParams_1.getInternalExpoRouterParams)(action.payload?.params ?? undefined)['__internal__expo_router_is_preview_navigation'];\n  /**\n   * React Navigation matches a screen by its name or a 'getID' function that uniquely identifies a screen.\n   * When a screen has been uniquely identified, the Stack can only have one instance of that screen.\n   *\n   * Expo Router allows for a screen to be matched by name and path params, a 'getID' function or a singular id.\n   *\n   * Instead of reimplementing the entire StackRouter, we can override the getStateForAction method to handle the singular screen logic.\n   *\n   */\n  var stackRouterOverride = original => {\n    return {\n      getStateForAction: (state, action, options) => {\n        if (action.target && action.target !== state.key) {\n          return null;\n        }\n        if (!isStackAction(action)) {\n          return original.getStateForAction(state, action, options);\n        }\n        // The dynamic getId added to an action, `router.push('screen', { singular: true })`\n        var actionSingularOptions = action.payload && 'singular' in action.payload ? action.payload.singular : undefined;\n        // Handle if 'getID' or 'singular' is set.\n        function getIdFunction() {\n          // Actions can be fired by the user, so we do need to validate their structure.\n          if (!('payload' in action) || !action.payload || !('name' in action.payload) || typeof action.payload.name !== 'string') {\n            return;\n          }\n          var actionName = action.payload.name;\n          return (\n            // The dynamic singular added to an action, `router.push('screen', { singular: () => 'id' })`\n            getActionSingularIdFn(actionSingularOptions, actionName) ||\n            // The static getId added as a prop to `<Screen singular />` or `<Screen getId={} />`\n            options.routeGetIdList[actionName]\n          );\n        }\n        var routeParamList = options.routeParamList;\n        switch (action.type) {\n          case 'PUSH':\n          case 'NAVIGATE':\n            {\n              if (!state.routeNames.includes(action.payload.name)) {\n                return null;\n              }\n              // START FORK\n              var getId = getIdFunction();\n              // const getId = options.routeGetIdList[action.payload.name];\n              // END FORK\n              var id = getId?.({\n                params: action.payload.params\n              });\n              var route;\n              if (id !== undefined) {\n                route = state.routes.findLast(route => route.name === action.payload.name && id === getId?.({\n                  params: route.params\n                }));\n              } else if (action.type === 'NAVIGATE') {\n                var currentRoute = state.routes[state.index];\n                // If the route matches the current one, then navigate to it\n                if (action.payload.name === currentRoute.name && !isPreviewAction(action)) {\n                  route = currentRoute;\n                } else if (action.payload.pop) {\n                  route = state.routes.findLast(route => route.name === action.payload.name);\n                }\n              }\n              // START FORK\n              if (isPreviewAction(action) && !route) {\n                route = state.preloadedRoutes.find(route => route.name === action.payload.name && id === route.key);\n              }\n              // END FORK\n              if (!route) {\n                route = state.preloadedRoutes.find(route => route.name === action.payload.name && id === getId?.({\n                  params: route.params\n                }));\n              }\n              var params;\n              if (action.type === 'NAVIGATE' && action.payload.merge && route) {\n                params = action.payload.params !== undefined || routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...route.params,\n                  ...action.payload.params\n                } : route.params;\n              } else {\n                params = routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params;\n              }\n              var routes;\n              if (route) {\n                if (action.type === 'NAVIGATE' && action.payload.pop) {\n                  routes = [];\n                  // Get all routes until the matching one\n                  for (var r of state.routes) {\n                    if (r.key === route.key) {\n                      routes.push({\n                        ...route,\n                        path: action.payload.path !== undefined ? action.payload.path : route.path,\n                        params\n                      });\n                      break;\n                    }\n                    routes.push(r);\n                  }\n                } else {\n                  // START FORK\n                  // If there is an id, then filter out the existing route with the same id.\n                  // THIS ACTION IS DANGEROUS. This can cause React Native Screens to freeze\n                  if (id !== undefined) {\n                    routes = state.routes.filter(r => r.key !== route.key);\n                  } else if (action.type === 'NAVIGATE' && state.routes.length > 0) {\n                    // The navigation action should only replace the last route if it has the same name and path params.\n                    var lastRoute = state.routes[state.routes.length - 1];\n                    if ((0, useScreens_1.getSingularId)(lastRoute.name, {\n                      params: lastRoute.params\n                    }) === (0, useScreens_1.getSingularId)(route.name, {\n                      params\n                    })) {\n                      routes = state.routes.slice(0, -1);\n                    } else {\n                      routes = [...state.routes];\n                    }\n                  } else {\n                    routes = [...state.routes];\n                  }\n                  // If the routes length is the same as the state routes length, then we are navigating to a new route.\n                  // Otherwise we are replacing an existing route.\n                  var key = routes.length === state.routes.length && !isPreviewAction(action) ? `${action.payload.name}-${(0, non_secure_1.nanoid)()}` : route.key;\n                  routes.push({\n                    ...route,\n                    key,\n                    path: action.type === 'NAVIGATE' && action.payload.path !== undefined ? action.payload.path : route.path,\n                    params\n                  });\n                  // routes = state.routes.filter((r) => r.key !== route.key);\n                  // routes.push({\n                  //   ...route,\n                  //   path:\n                  //     action.type === 'NAVIGATE' && action.payload.path !== undefined\n                  //       ? action.payload.path\n                  //       : route.path,\n                  //   params,\n                  // });\n                  // END FORK\n                }\n              } else {\n                routes = [...state.routes, {\n                  key: `${action.payload.name}-${(0, non_secure_1.nanoid)()}`,\n                  name: action.payload.name,\n                  path: action.type === 'NAVIGATE' ? action.payload.path : undefined,\n                  params\n                }];\n              }\n              // START FORK\n              // return filterSingular(\n              var result = {\n                ...state,\n                index: routes.length - 1,\n                preloadedRoutes: state.preloadedRoutes.filter(route => routes[routes.length - 1].key !== route.key),\n                routes\n              };\n              if (actionSingularOptions) {\n                return filterSingular(result, getId);\n              }\n              return result;\n              // return {\n              //   ...state,\n              //   index: routes.length - 1,\n              //   preloadedRoutes: state.preloadedRoutes.filter(\n              //     (route) => routes[routes.length - 1].key !== route.key\n              //   ),\n              //   routes,\n              // };\n              // END FORK\n            }\n          case 'PRELOAD':\n            {\n              // START FORK\n              // This will be the case for example for protected route\n              if (!state.routeNames.includes(action.payload.name)) {\n                return null;\n              }\n              // END FORK\n              var _getId = options.routeGetIdList[action.payload.name];\n              var _id = _getId?.({\n                params: action.payload.params\n              });\n              var _route;\n              if (_id !== undefined) {\n                _route = state.routes.find(route => route.name === action.payload.name && _id === _getId?.({\n                  params: route.params\n                }));\n              }\n              if (_route) {\n                return {\n                  ...state,\n                  routes: state.routes.map(r => {\n                    if (r.key !== _route?.key) {\n                      return r;\n                    }\n                    return {\n                      ...r,\n                      params: routeParamList[action.payload.name] !== undefined ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params\n                      } : action.payload.params\n                    };\n                  })\n                };\n              } else {\n                // START FORK\n                var currentPreloadedRoute = {\n                  key: `${action.payload.name}-${(0, non_secure_1.nanoid)()}`,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? {\n                    ...routeParamList[action.payload.name],\n                    ...action.payload.params\n                  } : action.payload.params\n                };\n                // END FORK\n                return {\n                  ...state,\n                  // START FORK\n                  // Adding the current preloaded route to the beginning of the preloadedRoutes array\n                  // This ensures that the preloaded route will be the next one after the visible route\n                  // and when navigation will happen, there will be no reshuffling\n                  // This is a workaround for the link preview navigation issue, when screen would freeze after navigation from native side\n                  // and reshuffling from react-navigation\n                  preloadedRoutes: [currentPreloadedRoute].concat(state.preloadedRoutes.filter(r => r.name !== action.payload.name || _id !== _getId?.({\n                    params: r.params\n                  })))\n                  // preloadedRoutes: state.preloadedRoutes\n                  //   .filter(\n                  //     (r) =>\n                  //       r.name !== action.payload.name ||\n                  //       id !== getId?.({ params: r.params })\n                  //   )\n                  //   .concat({\n                  //     key: `${action.payload.name}-${nanoid()}`,\n                  //     name: action.payload.name,\n                  //     params:\n                  //       routeParamList[action.payload.name] !== undefined\n                  //         ? {\n                  //             ...routeParamList[action.payload.name],\n                  //             ...action.payload.params,\n                  //           }\n                  //         : action.payload.params,\n                  //   }),\n                  // END FORK\n                };\n              }\n            }\n          default:\n            {\n              return original.getStateForAction(state, action, options);\n            }\n        }\n      }\n    };\n  };\n  exports.stackRouterOverride = stackRouterOverride;\n  function getActionSingularIdFn(actionGetId, name) {\n    if (typeof actionGetId === 'function') {\n      return options => actionGetId(name, options.params ?? {});\n    } else if (actionGetId === true) {\n      return options => (0, useScreens_1.getSingularId)(name, options);\n    }\n    return undefined;\n  }\n  /**\n   * If there is a dynamic singular on an action, then we need to filter the state to only have singular screens.\n   * As multiples may have been added before we did the singular navigation.\n   */\n  function filterSingular(state, getId) {\n    if (!state) {\n      return state;\n    }\n    if (!state.routes) {\n      return state;\n    }\n    var currentIndex = state.index || state.routes.length - 1;\n    var current = state.routes[currentIndex];\n    var name = current.name;\n    var id = getId?.({\n      params: current.params\n    });\n    if (!id) {\n      return state;\n    }\n    // TypeScript needs a type assertion here for the filter to work.\n    var routes = state.routes;\n    routes = routes.filter((route, index) => {\n      // If the route is the current route, keep it.\n      if (index === currentIndex) {\n        return true;\n      }\n      // Remove all other routes with the same name and id.\n      return name !== route.name || id !== getId?.({\n        params: route.params\n      });\n    });\n    return {\n      ...state,\n      index: routes.length - 1,\n      routes\n    };\n  }\n  var Stack = Object.assign(props => {\n    var _ref = (0, LinkPreviewContext_1.useLinkPreviewContext)(),\n      isStackAnimationDisabled = _ref.isStackAnimationDisabled;\n    var screenOptions = (0, react_1.useMemo)(() => {\n      var condition = isStackAnimationDisabled ? () => true : shouldDisableAnimationBasedOnParams;\n      return disableAnimationInScreenOptions(props.screenOptions, condition);\n    }, [props.screenOptions, isStackAnimationDisabled]);\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(RNStack, {\n      ...props,\n      screenOptions: screenOptions,\n      UNSTABLE_router: exports.stackRouterOverride\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this);\n  }, {\n    Screen: RNStack.Screen,\n    Protected: Protected_1.Protected\n  });\n  function disableAnimationInScreenOptions(options, condition) {\n    if (options && typeof options === 'function') {\n      return props => {\n        var oldOptions = options(props);\n        if (condition(props.route)) {\n          return {\n            ...oldOptions,\n            animation: 'none'\n          };\n        }\n        return oldOptions ?? {};\n      };\n    }\n    return props => {\n      if (condition(props.route)) {\n        return {\n          ...(options ?? {}),\n          animation: 'none'\n        };\n      }\n      return options ?? {};\n    };\n  }\n  function shouldDisableAnimationBasedOnParams(route) {\n    var expoParams = (0, navigationParams_1.getInternalExpoRouterParams)(route.params);\n    return !!expoParams.__internal_expo_router_no_animation;\n  }\n  exports.default = Stack;\n  var StackRouter = options => {\n    var router = (0, native_1.StackRouter)(options);\n    return {\n      ...router,\n      ...(0, exports.stackRouterOverride)(router)\n    };\n  };\n  exports.StackRouter = StackRouter;\n});","lineCount":387,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,2,13],[5,6,2,13,"_reactJsxDevRuntime"],[5,25,2,13],[5,28,2,13,"require"],[5,35,2,13],[5,36,2,13,"_dependencyMap"],[5,50,2,13],[6,2,2,13],[6,6,2,13,"_jsxFileName"],[6,18,2,13],[7,2,3,0,"Object"],[7,8,3,6],[7,9,3,7,"defineProperty"],[7,23,3,21],[7,24,3,22,"exports"],[7,31,3,29],[7,33,3,31],[7,45,3,43],[7,47,3,45],[8,4,3,47,"value"],[8,9,3,52],[8,11,3,54],[9,2,3,59],[9,3,3,60],[9,4,3,61],[10,2,4,0,"exports"],[10,9,4,7],[10,10,4,8,"StackRouter"],[10,21,4,19],[10,24,4,22,"exports"],[10,31,4,29],[10,32,4,30,"stackRouterOverride"],[10,51,4,49],[10,54,4,52],[10,59,4,57],[10,60,4,58],[11,2,5,0],[11,6,5,6,"native_1"],[11,14,5,14],[11,17,5,17,"require"],[11,24,5,24],[11,25,5,24,"_dependencyMap"],[11,39,5,24],[11,70,5,51],[11,71,5,52],[12,2,6,0],[12,6,6,6,"non_secure_1"],[12,18,6,18],[12,21,6,21,"require"],[12,28,6,28],[12,29,6,28,"_dependencyMap"],[12,43,6,28],[12,67,6,48],[12,68,6,49],[13,2,7,0],[13,6,7,6,"react_1"],[13,13,7,13],[13,16,7,16,"require"],[13,23,7,23],[13,24,7,23,"_dependencyMap"],[13,38,7,23],[13,50,7,31],[13,51,7,32],[14,2,8,0],[14,6,8,6,"withLayoutContext_1"],[14,25,8,25],[14,28,8,28,"require"],[14,35,8,35],[14,36,8,35,"_dependencyMap"],[14,50,8,35],[14,76,8,57],[14,77,8,58],[15,2,9,0],[15,6,9,6,"createNativeStackNavigator_1"],[15,34,9,34],[15,37,9,37,"require"],[15,44,9,44],[15,45,9,44,"_dependencyMap"],[15,59,9,44],[15,113,9,94],[15,114,9,95],[16,2,10,0],[16,6,10,6,"LinkPreviewContext_1"],[16,26,10,26],[16,29,10,29,"require"],[16,36,10,36],[16,37,10,36,"_dependencyMap"],[16,51,10,36],[16,92,10,73],[16,93,10,74],[17,2,11,0],[17,6,11,6,"navigationParams_1"],[17,24,11,24],[17,27,11,27,"require"],[17,34,11,34],[17,35,11,34,"_dependencyMap"],[17,49,11,34],[17,75,11,56],[17,76,11,57],[18,2,12,0],[18,6,12,6,"useScreens_1"],[18,18,12,18],[18,21,12,21,"require"],[18,28,12,28],[18,29,12,28,"_dependencyMap"],[18,43,12,28],[18,63,12,44],[18,64,12,45],[19,2,13,0],[19,6,13,6,"Protected_1"],[19,17,13,17],[19,20,13,20,"require"],[19,27,13,27],[19,28,13,27,"_dependencyMap"],[19,42,13,27],[19,67,13,48],[19,68,13,49],[20,2,14,0],[20,6,14,6,"NativeStackNavigator"],[20,26,14,26],[20,29,14,29],[20,30,14,30],[20,31,14,31],[20,33,14,33,"createNativeStackNavigator_1"],[20,61,14,61],[20,62,14,62,"createNativeStackNavigator"],[20,88,14,88],[20,90,14,90],[20,91,14,91],[20,92,14,92,"Navigator"],[20,101,14,101],[21,2,15,0],[21,6,15,6,"RNStack"],[21,13,15,13],[21,16,15,16],[21,17,15,17],[21,18,15,18],[21,20,15,20,"withLayoutContext_1"],[21,39,15,39],[21,40,15,40,"withLayoutContext"],[21,57,15,57],[21,59,15,59,"NativeStackNavigator"],[21,79,15,79],[21,80,15,80],[22,2,16,0],[22,11,16,9,"isStackAction"],[22,24,16,22,"isStackAction"],[22,25,16,23,"action"],[22,31,16,29],[22,33,16,31],[23,4,17,4],[23,11,17,12,"action"],[23,17,17,18],[23,18,17,19,"type"],[23,22,17,23],[23,27,17,28],[23,33,17,34],[23,37,18,8,"action"],[23,43,18,14],[23,44,18,15,"type"],[23,48,18,19],[23,53,18,24],[23,63,18,34],[23,67,19,8,"action"],[23,73,19,14],[23,74,19,15,"type"],[23,78,19,19],[23,83,19,24],[23,88,19,29],[23,92,20,8,"action"],[23,98,20,14],[23,99,20,15,"type"],[23,103,20,19],[23,108,20,24],[23,120,20,36],[23,124,21,8,"action"],[23,130,21,14],[23,131,21,15,"type"],[23,135,21,19],[23,140,21,24],[23,149,21,33],[23,153,22,8,"action"],[23,159,22,14],[23,160,22,15,"type"],[23,164,22,19],[23,169,22,24],[23,178,22,33],[24,2,23,0],[25,2,24,0],[25,6,24,6,"isPreviewAction"],[25,21,24,21],[25,24,24,25,"action"],[25,30,24,31],[25,34,24,36],[25,35,24,37],[25,36,24,38,"action"],[25,42,24,44],[25,43,24,45,"payload"],[25,50,24,52],[25,54,25,4],[25,62,25,12],[25,66,25,16,"action"],[25,72,25,22],[25,73,25,23,"payload"],[25,80,25,30],[25,84,26,4],[25,91,26,11,"action"],[25,97,26,17],[25,98,26,18,"payload"],[25,105,26,25],[25,106,26,26,"params"],[25,112,26,32],[25,117,26,37],[25,125,26,45],[25,129,27,4],[25,130,27,5],[25,131,27,6],[25,132,27,7],[25,133,27,8],[25,135,27,10,"navigationParams_1"],[25,153,27,28],[25,154,27,29,"getInternalExpoRouterParams"],[25,181,27,56],[25,183,27,58,"action"],[25,189,27,64],[25,190,27,65,"payload"],[25,197,27,72],[25,199,27,74,"params"],[25,205,27,80],[25,209,27,84,"undefined"],[25,218,27,93],[25,219,27,94],[25,220,27,95],[25,267,27,142],[25,268,27,143],[26,2,28,0],[27,0,29,0],[28,0,30,0],[29,0,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,2,37,0],[35,6,37,6,"stackRouterOverride"],[35,25,37,25],[35,28,37,29,"original"],[35,36,37,37],[35,40,37,42],[36,4,38,4],[36,11,38,11],[37,6,39,8,"getStateForAction"],[37,23,39,25],[37,25,39,27,"getStateForAction"],[37,26,39,28,"state"],[37,31,39,33],[37,33,39,35,"action"],[37,39,39,41],[37,41,39,43,"options"],[37,48,39,50],[37,53,39,55],[38,8,40,12],[38,12,40,16,"action"],[38,18,40,22],[38,19,40,23,"target"],[38,25,40,29],[38,29,40,33,"action"],[38,35,40,39],[38,36,40,40,"target"],[38,42,40,46],[38,47,40,51,"state"],[38,52,40,56],[38,53,40,57,"key"],[38,56,40,60],[38,58,40,62],[39,10,41,16],[39,17,41,23],[39,21,41,27],[40,8,42,12],[41,8,43,12],[41,12,43,16],[41,13,43,17,"isStackAction"],[41,26,43,30],[41,27,43,31,"action"],[41,33,43,37],[41,34,43,38],[41,36,43,40],[42,10,44,16],[42,17,44,23,"original"],[42,25,44,31],[42,26,44,32,"getStateForAction"],[42,43,44,49],[42,44,44,50,"state"],[42,49,44,55],[42,51,44,57,"action"],[42,57,44,63],[42,59,44,65,"options"],[42,66,44,72],[42,67,44,73],[43,8,45,12],[44,8,46,12],[45,8,47,12],[45,12,47,18,"actionSingularOptions"],[45,33,47,39],[45,36,47,42,"action"],[45,42,47,48],[45,43,47,49,"payload"],[45,50,47,56],[45,54,47,60],[45,64,47,70],[45,68,47,74,"action"],[45,74,47,80],[45,75,47,81,"payload"],[45,82,47,88],[45,85,48,18,"action"],[45,91,48,24],[45,92,48,25,"payload"],[45,99,48,32],[45,100,48,33,"singular"],[45,108,48,41],[45,111,49,18,"undefined"],[45,120,49,27],[46,8,50,12],[47,8,51,12],[47,17,51,21,"getIdFunction"],[47,30,51,34,"getIdFunction"],[47,31,51,34],[47,33,51,37],[48,10,52,16],[49,10,53,16],[49,14,53,20],[49,16,53,22],[49,25,53,31],[49,29,53,35,"action"],[49,35,53,41],[49,36,53,42],[49,40,54,20],[49,41,54,21,"action"],[49,47,54,27],[49,48,54,28,"payload"],[49,55,54,35],[49,59,55,20],[49,61,55,22],[49,67,55,28],[49,71,55,32,"action"],[49,77,55,38],[49,78,55,39,"payload"],[49,85,55,46],[49,86,55,47],[49,90,56,20],[49,97,56,27,"action"],[49,103,56,33],[49,104,56,34,"payload"],[49,111,56,41],[49,112,56,42,"name"],[49,116,56,46],[49,121,56,51],[49,129,56,59],[49,131,56,61],[50,12,57,20],[51,10,58,16],[52,10,59,16],[52,14,59,22,"actionName"],[52,24,59,32],[52,27,59,35,"action"],[52,33,59,41],[52,34,59,42,"payload"],[52,41,59,49],[52,42,59,50,"name"],[52,46,59,54],[53,10,60,16],[54,12,61,16],[55,12,62,16,"getActionSingularIdFn"],[55,33,62,37],[55,34,62,38,"actionSingularOptions"],[55,55,62,59],[55,57,62,61,"actionName"],[55,67,62,71],[55,68,62,72],[56,12,63,20],[57,12,64,20,"options"],[57,19,64,27],[57,20,64,28,"routeGetIdList"],[57,34,64,42],[57,35,64,43,"actionName"],[57,45,64,53],[58,10,64,54],[59,8,65,12],[60,8,66,12],[60,12,66,20,"routeParamList"],[60,26,66,34],[60,29,66,39,"options"],[60,36,66,46],[60,37,66,20,"routeParamList"],[60,51,66,34],[61,8,67,12],[61,16,67,20,"action"],[61,22,67,26],[61,23,67,27,"type"],[61,27,67,31],[62,10,68,16],[62,15,68,21],[62,21,68,27],[63,10,69,16],[63,15,69,21],[63,25,69,31],[64,12,69,33],[65,14,70,20],[65,18,70,24],[65,19,70,25,"state"],[65,24,70,30],[65,25,70,31,"routeNames"],[65,35,70,41],[65,36,70,42,"includes"],[65,44,70,50],[65,45,70,51,"action"],[65,51,70,57],[65,52,70,58,"payload"],[65,59,70,65],[65,60,70,66,"name"],[65,64,70,70],[65,65,70,71],[65,67,70,73],[66,16,71,24],[66,23,71,31],[66,27,71,35],[67,14,72,20],[68,14,73,20],[69,14,74,20],[69,18,74,26,"getId"],[69,23,74,31],[69,26,74,34,"getIdFunction"],[69,39,74,47],[69,40,74,48],[69,41,74,49],[70,14,75,20],[71,14,76,20],[72,14,77,20],[72,18,77,26,"id"],[72,20,77,28],[72,23,77,31,"getId"],[72,28,77,36],[72,31,77,39],[73,16,77,41,"params"],[73,22,77,47],[73,24,77,49,"action"],[73,30,77,55],[73,31,77,56,"payload"],[73,38,77,63],[73,39,77,64,"params"],[74,14,77,71],[74,15,77,72],[74,16,77,73],[75,14,78,20],[75,18,78,24,"route"],[75,23,78,29],[76,14,79,20],[76,18,79,24,"id"],[76,20,79,26],[76,25,79,31,"undefined"],[76,34,79,40],[76,36,79,42],[77,16,80,24,"route"],[77,21,80,29],[77,24,80,32,"state"],[77,29,80,37],[77,30,80,38,"routes"],[77,36,80,44],[77,37,80,45,"findLast"],[77,45,80,53],[77,46,80,55,"route"],[77,51,80,60],[77,55,80,65,"route"],[77,60,80,70],[77,61,80,71,"name"],[77,65,80,75],[77,70,80,80,"action"],[77,76,80,86],[77,77,80,87,"payload"],[77,84,80,94],[77,85,80,95,"name"],[77,89,80,99],[77,93,80,103,"id"],[77,95,80,105],[77,100,80,110,"getId"],[77,105,80,115],[77,108,80,118],[78,18,80,120,"params"],[78,24,80,126],[78,26,80,128,"route"],[78,31,80,133],[78,32,80,134,"params"],[79,16,80,141],[79,17,80,142],[79,18,80,143],[79,19,80,144],[80,14,81,20],[80,15,81,21],[80,21,82,25],[80,25,82,29,"action"],[80,31,82,35],[80,32,82,36,"type"],[80,36,82,40],[80,41,82,45],[80,51,82,55],[80,53,82,57],[81,16,83,24],[81,20,83,30,"currentRoute"],[81,32,83,42],[81,35,83,45,"state"],[81,40,83,50],[81,41,83,51,"routes"],[81,47,83,57],[81,48,83,58,"state"],[81,53,83,63],[81,54,83,64,"index"],[81,59,83,69],[81,60,83,70],[82,16,84,24],[83,16,85,24],[83,20,85,28,"action"],[83,26,85,34],[83,27,85,35,"payload"],[83,34,85,42],[83,35,85,43,"name"],[83,39,85,47],[83,44,85,52,"currentRoute"],[83,56,85,64],[83,57,85,65,"name"],[83,61,85,69],[83,65,85,73],[83,66,85,74,"isPreviewAction"],[83,81,85,89],[83,82,85,90,"action"],[83,88,85,96],[83,89,85,97],[83,91,85,99],[84,18,86,28,"route"],[84,23,86,33],[84,26,86,36,"currentRoute"],[84,38,86,48],[85,16,87,24],[85,17,87,25],[85,23,88,29],[85,27,88,33,"action"],[85,33,88,39],[85,34,88,40,"payload"],[85,41,88,47],[85,42,88,48,"pop"],[85,45,88,51],[85,47,88,53],[86,18,89,28,"route"],[86,23,89,33],[86,26,89,36,"state"],[86,31,89,41],[86,32,89,42,"routes"],[86,38,89,48],[86,39,89,49,"findLast"],[86,47,89,57],[86,48,89,59,"route"],[86,53,89,64],[86,57,89,69,"route"],[86,62,89,74],[86,63,89,75,"name"],[86,67,89,79],[86,72,89,84,"action"],[86,78,89,90],[86,79,89,91,"payload"],[86,86,89,98],[86,87,89,99,"name"],[86,91,89,103],[86,92,89,104],[87,16,90,24],[88,14,91,20],[89,14,92,20],[90,14,93,20],[90,18,93,24,"isPreviewAction"],[90,33,93,39],[90,34,93,40,"action"],[90,40,93,46],[90,41,93,47],[90,45,93,51],[90,46,93,52,"route"],[90,51,93,57],[90,53,93,59],[91,16,94,24,"route"],[91,21,94,29],[91,24,94,32,"state"],[91,29,94,37],[91,30,94,38,"preloadedRoutes"],[91,45,94,53],[91,46,94,54,"find"],[91,50,94,58],[91,51,94,60,"route"],[91,56,94,65],[91,60,94,70,"route"],[91,65,94,75],[91,66,94,76,"name"],[91,70,94,80],[91,75,94,85,"action"],[91,81,94,91],[91,82,94,92,"payload"],[91,89,94,99],[91,90,94,100,"name"],[91,94,94,104],[91,98,94,108,"id"],[91,100,94,110],[91,105,94,115,"route"],[91,110,94,120],[91,111,94,121,"key"],[91,114,94,124],[91,115,94,125],[92,14,95,20],[93,14,96,20],[94,14,97,20],[94,18,97,24],[94,19,97,25,"route"],[94,24,97,30],[94,26,97,32],[95,16,98,24,"route"],[95,21,98,29],[95,24,98,32,"state"],[95,29,98,37],[95,30,98,38,"preloadedRoutes"],[95,45,98,53],[95,46,98,54,"find"],[95,50,98,58],[95,51,98,60,"route"],[95,56,98,65],[95,60,98,70,"route"],[95,65,98,75],[95,66,98,76,"name"],[95,70,98,80],[95,75,98,85,"action"],[95,81,98,91],[95,82,98,92,"payload"],[95,89,98,99],[95,90,98,100,"name"],[95,94,98,104],[95,98,98,108,"id"],[95,100,98,110],[95,105,98,115,"getId"],[95,110,98,120],[95,113,98,123],[96,18,98,125,"params"],[96,24,98,131],[96,26,98,133,"route"],[96,31,98,138],[96,32,98,139,"params"],[97,16,98,146],[97,17,98,147],[97,18,98,148],[97,19,98,149],[98,14,99,20],[99,14,100,20],[99,18,100,24,"params"],[99,24,100,30],[100,14,101,20],[100,18,101,24,"action"],[100,24,101,30],[100,25,101,31,"type"],[100,29,101,35],[100,34,101,40],[100,44,101,50],[100,48,101,54,"action"],[100,54,101,60],[100,55,101,61,"payload"],[100,62,101,68],[100,63,101,69,"merge"],[100,68,101,74],[100,72,101,78,"route"],[100,77,101,83],[100,79,101,85],[101,16,102,24,"params"],[101,22,102,30],[101,25,103,28,"action"],[101,31,103,34],[101,32,103,35,"payload"],[101,39,103,42],[101,40,103,43,"params"],[101,46,103,49],[101,51,103,54,"undefined"],[101,60,103,63],[101,64,104,32,"routeParamList"],[101,78,104,46],[101,79,104,47,"action"],[101,85,104,53],[101,86,104,54,"payload"],[101,93,104,61],[101,94,104,62,"name"],[101,98,104,66],[101,99,104,67],[101,104,104,72,"undefined"],[101,113,104,81],[101,116,105,34],[102,18,106,36],[102,21,106,39,"routeParamList"],[102,35,106,53],[102,36,106,54,"action"],[102,42,106,60],[102,43,106,61,"payload"],[102,50,106,68],[102,51,106,69,"name"],[102,55,106,73],[102,56,106,74],[103,18,107,36],[103,21,107,39,"route"],[103,26,107,44],[103,27,107,45,"params"],[103,33,107,51],[104,18,108,36],[104,21,108,39,"action"],[104,27,108,45],[104,28,108,46,"payload"],[104,35,108,53],[104,36,108,54,"params"],[105,16,109,32],[105,17,109,33],[105,20,110,34,"route"],[105,25,110,39],[105,26,110,40,"params"],[105,32,110,46],[106,14,111,20],[106,15,111,21],[106,21,112,25],[107,16,113,24,"params"],[107,22,113,30],[107,25,114,28,"routeParamList"],[107,39,114,42],[107,40,114,43,"action"],[107,46,114,49],[107,47,114,50,"payload"],[107,54,114,57],[107,55,114,58,"name"],[107,59,114,62],[107,60,114,63],[107,65,114,68,"undefined"],[107,74,114,77],[107,77,115,34],[108,18,116,36],[108,21,116,39,"routeParamList"],[108,35,116,53],[108,36,116,54,"action"],[108,42,116,60],[108,43,116,61,"payload"],[108,50,116,68],[108,51,116,69,"name"],[108,55,116,73],[108,56,116,74],[109,18,117,36],[109,21,117,39,"action"],[109,27,117,45],[109,28,117,46,"payload"],[109,35,117,53],[109,36,117,54,"params"],[110,16,118,32],[110,17,118,33],[110,20,119,34,"action"],[110,26,119,40],[110,27,119,41,"payload"],[110,34,119,48],[110,35,119,49,"params"],[110,41,119,55],[111,14,120,20],[112,14,121,20],[112,18,121,24,"routes"],[112,24,121,30],[113,14,122,20],[113,18,122,24,"route"],[113,23,122,29],[113,25,122,31],[114,16,123,24],[114,20,123,28,"action"],[114,26,123,34],[114,27,123,35,"type"],[114,31,123,39],[114,36,123,44],[114,46,123,54],[114,50,123,58,"action"],[114,56,123,64],[114,57,123,65,"payload"],[114,64,123,72],[114,65,123,73,"pop"],[114,68,123,76],[114,70,123,78],[115,18,124,28,"routes"],[115,24,124,34],[115,27,124,37],[115,29,124,39],[116,18,125,28],[117,18,126,28],[117,23,126,33],[117,27,126,39,"r"],[117,28,126,40],[117,32,126,44,"state"],[117,37,126,49],[117,38,126,50,"routes"],[117,44,126,56],[117,46,126,58],[118,20,127,32],[118,24,127,36,"r"],[118,25,127,37],[118,26,127,38,"key"],[118,29,127,41],[118,34,127,46,"route"],[118,39,127,51],[118,40,127,52,"key"],[118,43,127,55],[118,45,127,57],[119,22,128,36,"routes"],[119,28,128,42],[119,29,128,43,"push"],[119,33,128,47],[119,34,128,48],[120,24,129,40],[120,27,129,43,"route"],[120,32,129,48],[121,24,130,40,"path"],[121,28,130,44],[121,30,130,46,"action"],[121,36,130,52],[121,37,130,53,"payload"],[121,44,130,60],[121,45,130,61,"path"],[121,49,130,65],[121,54,130,70,"undefined"],[121,63,130,79],[121,66,130,82,"action"],[121,72,130,88],[121,73,130,89,"payload"],[121,80,130,96],[121,81,130,97,"path"],[121,85,130,101],[121,88,130,104,"route"],[121,93,130,109],[121,94,130,110,"path"],[121,98,130,114],[122,24,131,40,"params"],[123,22,132,36],[123,23,132,37],[123,24,132,38],[124,22,133,36],[125,20,134,32],[126,20,135,32,"routes"],[126,26,135,38],[126,27,135,39,"push"],[126,31,135,43],[126,32,135,44,"r"],[126,33,135,45],[126,34,135,46],[127,18,136,28],[128,16,137,24],[128,17,137,25],[128,23,138,29],[129,18,139,28],[130,18,140,28],[131,18,141,28],[132,18,142,28],[132,22,142,32,"id"],[132,24,142,34],[132,29,142,39,"undefined"],[132,38,142,48],[132,40,142,50],[133,20,143,32,"routes"],[133,26,143,38],[133,29,143,41,"state"],[133,34,143,46],[133,35,143,47,"routes"],[133,41,143,53],[133,42,143,54,"filter"],[133,48,143,60],[133,49,143,62,"r"],[133,50,143,63],[133,54,143,68,"r"],[133,55,143,69],[133,56,143,70,"key"],[133,59,143,73],[133,64,143,78,"route"],[133,69,143,83],[133,70,143,84,"key"],[133,73,143,87],[133,74,143,88],[134,18,144,28],[134,19,144,29],[134,25,145,33],[134,29,145,37,"action"],[134,35,145,43],[134,36,145,44,"type"],[134,40,145,48],[134,45,145,53],[134,55,145,63],[134,59,145,67,"state"],[134,64,145,72],[134,65,145,73,"routes"],[134,71,145,79],[134,72,145,80,"length"],[134,78,145,86],[134,81,145,89],[134,82,145,90],[134,84,145,92],[135,20,146,32],[136,20,147,32],[136,24,147,38,"lastRoute"],[136,33,147,47],[136,36,147,50,"state"],[136,41,147,55],[136,42,147,56,"routes"],[136,48,147,62],[136,49,147,63,"state"],[136,54,147,68],[136,55,147,69,"routes"],[136,61,147,75],[136,62,147,76,"length"],[136,68,147,82],[136,71,147,85],[136,72,147,86],[136,73,147,87],[137,20,148,32],[137,24,148,36],[137,25,148,37],[137,26,148,38],[137,28,148,40,"useScreens_1"],[137,40,148,52],[137,41,148,53,"getSingularId"],[137,54,148,66],[137,56,148,68,"lastRoute"],[137,65,148,77],[137,66,148,78,"name"],[137,70,148,82],[137,72,148,84],[138,22,148,86,"params"],[138,28,148,92],[138,30,148,94,"lastRoute"],[138,39,148,103],[138,40,148,104,"params"],[139,20,148,111],[139,21,148,112],[139,22,148,113],[139,27,149,36],[139,28,149,37],[139,29,149,38],[139,31,149,40,"useScreens_1"],[139,43,149,52],[139,44,149,53,"getSingularId"],[139,57,149,66],[139,59,149,68,"route"],[139,64,149,73],[139,65,149,74,"name"],[139,69,149,78],[139,71,149,80],[140,22,149,82,"params"],[141,20,149,89],[141,21,149,90],[141,22,149,91],[141,24,149,93],[142,22,150,36,"routes"],[142,28,150,42],[142,31,150,45,"state"],[142,36,150,50],[142,37,150,51,"routes"],[142,43,150,57],[142,44,150,58,"slice"],[142,49,150,63],[142,50,150,64],[142,51,150,65],[142,53,150,67],[142,54,150,68],[142,55,150,69],[142,56,150,70],[143,20,151,32],[143,21,151,33],[143,27,152,37],[144,22,153,36,"routes"],[144,28,153,42],[144,31,153,45],[144,32,153,46],[144,35,153,49,"state"],[144,40,153,54],[144,41,153,55,"routes"],[144,47,153,61],[144,48,153,62],[145,20,154,32],[146,18,155,28],[146,19,155,29],[146,25,156,33],[147,20,157,32,"routes"],[147,26,157,38],[147,29,157,41],[147,30,157,42],[147,33,157,45,"state"],[147,38,157,50],[147,39,157,51,"routes"],[147,45,157,57],[147,46,157,58],[148,18,158,28],[149,18,159,28],[150,18,160,28],[151,18,161,28],[151,22,161,34,"key"],[151,25,161,37],[151,28,161,40,"routes"],[151,34,161,46],[151,35,161,47,"length"],[151,41,161,53],[151,46,161,58,"state"],[151,51,161,63],[151,52,161,64,"routes"],[151,58,161,70],[151,59,161,71,"length"],[151,65,161,77],[151,69,161,81],[151,70,161,82,"isPreviewAction"],[151,85,161,97],[151,86,161,98,"action"],[151,92,161,104],[151,93,161,105],[151,96,162,34],[151,99,162,37,"action"],[151,105,162,43],[151,106,162,44,"payload"],[151,113,162,51],[151,114,162,52,"name"],[151,118,162,56],[151,122,162,60],[151,123,162,61],[151,124,162,62],[151,126,162,64,"non_secure_1"],[151,138,162,76],[151,139,162,77,"nanoid"],[151,145,162,83],[151,147,162,85],[151,148,162,86],[151,150,162,88],[151,153,163,34,"route"],[151,158,163,39],[151,159,163,40,"key"],[151,162,163,43],[152,18,164,28,"routes"],[152,24,164,34],[152,25,164,35,"push"],[152,29,164,39],[152,30,164,40],[153,20,165,32],[153,23,165,35,"route"],[153,28,165,40],[154,20,166,32,"key"],[154,23,166,35],[155,20,167,32,"path"],[155,24,167,36],[155,26,167,38,"action"],[155,32,167,44],[155,33,167,45,"type"],[155,37,167,49],[155,42,167,54],[155,52,167,64],[155,56,167,68,"action"],[155,62,167,74],[155,63,167,75,"payload"],[155,70,167,82],[155,71,167,83,"path"],[155,75,167,87],[155,80,167,92,"undefined"],[155,89,167,101],[155,92,168,38,"action"],[155,98,168,44],[155,99,168,45,"payload"],[155,106,168,52],[155,107,168,53,"path"],[155,111,168,57],[155,114,169,38,"route"],[155,119,169,43],[155,120,169,44,"path"],[155,124,169,48],[156,20,170,32,"params"],[157,18,171,28],[157,19,171,29],[157,20,171,30],[158,18,172,28],[159,18,173,28],[160,18,174,28],[161,18,175,28],[162,18,176,28],[163,18,177,28],[164,18,178,28],[165,18,179,28],[166,18,180,28],[167,18,181,28],[168,16,182,24],[169,14,183,20],[169,15,183,21],[169,21,184,25],[170,16,185,24,"routes"],[170,22,185,30],[170,25,185,33],[170,26,186,28],[170,29,186,31,"state"],[170,34,186,36],[170,35,186,37,"routes"],[170,41,186,43],[170,43,187,28],[171,18,188,32,"key"],[171,21,188,35],[171,23,188,37],[171,26,188,40,"action"],[171,32,188,46],[171,33,188,47,"payload"],[171,40,188,54],[171,41,188,55,"name"],[171,45,188,59],[171,49,188,63],[171,50,188,64],[171,51,188,65],[171,53,188,67,"non_secure_1"],[171,65,188,79],[171,66,188,80,"nanoid"],[171,72,188,86],[171,74,188,88],[171,75,188,89],[171,77,188,91],[172,18,189,32,"name"],[172,22,189,36],[172,24,189,38,"action"],[172,30,189,44],[172,31,189,45,"payload"],[172,38,189,52],[172,39,189,53,"name"],[172,43,189,57],[173,18,190,32,"path"],[173,22,190,36],[173,24,190,38,"action"],[173,30,190,44],[173,31,190,45,"type"],[173,35,190,49],[173,40,190,54],[173,50,190,64],[173,53,190,67,"action"],[173,59,190,73],[173,60,190,74,"payload"],[173,67,190,81],[173,68,190,82,"path"],[173,72,190,86],[173,75,190,89,"undefined"],[173,84,190,98],[174,18,191,32,"params"],[175,16,192,28],[175,17,192,29],[175,18,193,25],[176,14,194,20],[177,14,195,20],[178,14,196,20],[179,14,197,20],[179,18,197,26,"result"],[179,24,197,32],[179,27,197,35],[180,16,198,24],[180,19,198,27,"state"],[180,24,198,32],[181,16,199,24,"index"],[181,21,199,29],[181,23,199,31,"routes"],[181,29,199,37],[181,30,199,38,"length"],[181,36,199,44],[181,39,199,47],[181,40,199,48],[182,16,200,24,"preloadedRoutes"],[182,31,200,39],[182,33,200,41,"state"],[182,38,200,46],[182,39,200,47,"preloadedRoutes"],[182,54,200,62],[182,55,200,63,"filter"],[182,61,200,69],[182,62,200,71,"route"],[182,67,200,76],[182,71,200,81,"routes"],[182,77,200,87],[182,78,200,88,"routes"],[182,84,200,94],[182,85,200,95,"length"],[182,91,200,101],[182,94,200,104],[182,95,200,105],[182,96,200,106],[182,97,200,107,"key"],[182,100,200,110],[182,105,200,115,"route"],[182,110,200,120],[182,111,200,121,"key"],[182,114,200,124],[182,115,200,125],[183,16,201,24,"routes"],[184,14,202,20],[184,15,202,21],[185,14,203,20],[185,18,203,24,"actionSingularOptions"],[185,39,203,45],[185,41,203,47],[186,16,204,24],[186,23,204,31,"filterSingular"],[186,37,204,45],[186,38,204,46,"result"],[186,44,204,52],[186,46,204,54,"getId"],[186,51,204,59],[186,52,204,60],[187,14,205,20],[188,14,206,20],[188,21,206,27,"result"],[188,27,206,33],[189,14,207,20],[190,14,208,20],[191,14,209,20],[192,14,210,20],[193,14,211,20],[194,14,212,20],[195,14,213,20],[196,14,214,20],[197,14,215,20],[198,12,216,16],[199,10,217,16],[199,15,217,21],[199,24,217,30],[200,12,217,32],[201,14,218,20],[202,14,219,20],[203,14,220,20],[203,18,220,24],[203,19,220,25,"state"],[203,24,220,30],[203,25,220,31,"routeNames"],[203,35,220,41],[203,36,220,42,"includes"],[203,44,220,50],[203,45,220,51,"action"],[203,51,220,57],[203,52,220,58,"payload"],[203,59,220,65],[203,60,220,66,"name"],[203,64,220,70],[203,65,220,71],[203,67,220,73],[204,16,221,24],[204,23,221,31],[204,27,221,35],[205,14,222,20],[206,14,223,20],[207,14,224,20],[207,18,224,26,"getId"],[207,24,224,31],[207,27,224,34,"options"],[207,34,224,41],[207,35,224,42,"routeGetIdList"],[207,49,224,56],[207,50,224,57,"action"],[207,56,224,63],[207,57,224,64,"payload"],[207,64,224,71],[207,65,224,72,"name"],[207,69,224,76],[207,70,224,77],[208,14,225,20],[208,18,225,26,"id"],[208,21,225,28],[208,24,225,31,"getId"],[208,30,225,36],[208,33,225,39],[209,16,225,41,"params"],[209,22,225,47],[209,24,225,49,"action"],[209,30,225,55],[209,31,225,56,"payload"],[209,38,225,63],[209,39,225,64,"params"],[210,14,225,71],[210,15,225,72],[210,16,225,73],[211,14,226,20],[211,18,226,24,"route"],[211,24,226,29],[212,14,227,20],[212,18,227,24,"id"],[212,21,227,26],[212,26,227,31,"undefined"],[212,35,227,40],[212,37,227,42],[213,16,228,24,"route"],[213,22,228,29],[213,25,228,32,"state"],[213,30,228,37],[213,31,228,38,"routes"],[213,37,228,44],[213,38,228,45,"find"],[213,42,228,49],[213,43,228,51,"route"],[213,48,228,56],[213,52,228,61,"route"],[213,57,228,66],[213,58,228,67,"name"],[213,62,228,71],[213,67,228,76,"action"],[213,73,228,82],[213,74,228,83,"payload"],[213,81,228,90],[213,82,228,91,"name"],[213,86,228,95],[213,90,228,99,"id"],[213,93,228,101],[213,98,228,106,"getId"],[213,104,228,111],[213,107,228,114],[214,18,228,116,"params"],[214,24,228,122],[214,26,228,124,"route"],[214,31,228,129],[214,32,228,130,"params"],[215,16,228,137],[215,17,228,138],[215,18,228,139],[215,19,228,140],[216,14,229,20],[217,14,230,20],[217,18,230,24,"route"],[217,24,230,29],[217,26,230,31],[218,16,231,24],[218,23,231,31],[219,18,232,28],[219,21,232,31,"state"],[219,26,232,36],[220,18,233,28,"routes"],[220,24,233,34],[220,26,233,36,"state"],[220,31,233,41],[220,32,233,42,"routes"],[220,38,233,48],[220,39,233,49,"map"],[220,42,233,52],[220,43,233,54,"r"],[220,44,233,55],[220,48,233,60],[221,20,234,32],[221,24,234,36,"r"],[221,25,234,37],[221,26,234,38,"key"],[221,29,234,41],[221,34,234,46,"route"],[221,40,234,51],[221,42,234,53,"key"],[221,45,234,56],[221,47,234,58],[222,22,235,36],[222,29,235,43,"r"],[222,30,235,44],[223,20,236,32],[224,20,237,32],[224,27,237,39],[225,22,238,36],[225,25,238,39,"r"],[225,26,238,40],[226,22,239,36,"params"],[226,28,239,42],[226,30,239,44,"routeParamList"],[226,44,239,58],[226,45,239,59,"action"],[226,51,239,65],[226,52,239,66,"payload"],[226,59,239,73],[226,60,239,74,"name"],[226,64,239,78],[226,65,239,79],[226,70,239,84,"undefined"],[226,79,239,93],[226,82,240,42],[227,24,241,44],[227,27,241,47,"routeParamList"],[227,41,241,61],[227,42,241,62,"action"],[227,48,241,68],[227,49,241,69,"payload"],[227,56,241,76],[227,57,241,77,"name"],[227,61,241,81],[227,62,241,82],[228,24,242,44],[228,27,242,47,"action"],[228,33,242,53],[228,34,242,54,"payload"],[228,41,242,61],[228,42,242,62,"params"],[229,22,243,40],[229,23,243,41],[229,26,244,42,"action"],[229,32,244,48],[229,33,244,49,"payload"],[229,40,244,56],[229,41,244,57,"params"],[230,20,245,32],[230,21,245,33],[231,18,246,28],[231,19,246,29],[232,16,247,24],[232,17,247,25],[233,14,248,20],[233,15,248,21],[233,21,249,25],[234,16,250,24],[235,16,251,24],[235,20,251,30,"currentPreloadedRoute"],[235,41,251,51],[235,44,251,54],[236,18,252,28,"key"],[236,21,252,31],[236,23,252,33],[236,26,252,36,"action"],[236,32,252,42],[236,33,252,43,"payload"],[236,40,252,50],[236,41,252,51,"name"],[236,45,252,55],[236,49,252,59],[236,50,252,60],[236,51,252,61],[236,53,252,63,"non_secure_1"],[236,65,252,75],[236,66,252,76,"nanoid"],[236,72,252,82],[236,74,252,84],[236,75,252,85],[236,77,252,87],[237,18,253,28,"name"],[237,22,253,32],[237,24,253,34,"action"],[237,30,253,40],[237,31,253,41,"payload"],[237,38,253,48],[237,39,253,49,"name"],[237,43,253,53],[238,18,254,28,"params"],[238,24,254,34],[238,26,254,36,"routeParamList"],[238,40,254,50],[238,41,254,51,"action"],[238,47,254,57],[238,48,254,58,"payload"],[238,55,254,65],[238,56,254,66,"name"],[238,60,254,70],[238,61,254,71],[238,66,254,76,"undefined"],[238,75,254,85],[238,78,255,34],[239,20,256,36],[239,23,256,39,"routeParamList"],[239,37,256,53],[239,38,256,54,"action"],[239,44,256,60],[239,45,256,61,"payload"],[239,52,256,68],[239,53,256,69,"name"],[239,57,256,73],[239,58,256,74],[240,20,257,36],[240,23,257,39,"action"],[240,29,257,45],[240,30,257,46,"payload"],[240,37,257,53],[240,38,257,54,"params"],[241,18,258,32],[241,19,258,33],[241,22,259,34,"action"],[241,28,259,40],[241,29,259,41,"payload"],[241,36,259,48],[241,37,259,49,"params"],[242,16,260,24],[242,17,260,25],[243,16,261,24],[244,16,262,24],[244,23,262,31],[245,18,263,28],[245,21,263,31,"state"],[245,26,263,36],[246,18,264,28],[247,18,265,28],[248,18,266,28],[249,18,267,28],[250,18,268,28],[251,18,269,28],[252,18,270,28,"preloadedRoutes"],[252,33,270,43],[252,35,270,45],[252,36,270,46,"currentPreloadedRoute"],[252,57,270,67],[252,58,270,68],[252,59,270,69,"concat"],[252,65,270,75],[252,66,270,76,"state"],[252,71,270,81],[252,72,270,82,"preloadedRoutes"],[252,87,270,97],[252,88,270,98,"filter"],[252,94,270,104],[252,95,270,106,"r"],[252,96,270,107],[252,100,270,112,"r"],[252,101,270,113],[252,102,270,114,"name"],[252,106,270,118],[252,111,270,123,"action"],[252,117,270,129],[252,118,270,130,"payload"],[252,125,270,137],[252,126,270,138,"name"],[252,130,270,142],[252,134,270,146,"id"],[252,137,270,148],[252,142,270,153,"getId"],[252,148,270,158],[252,151,270,161],[253,20,270,163,"params"],[253,26,270,169],[253,28,270,171,"r"],[253,29,270,172],[253,30,270,173,"params"],[254,18,270,180],[254,19,270,181],[254,20,270,182],[254,21,270,183],[255,18,271,28],[256,18,272,28],[257,18,273,28],[258,18,274,28],[259,18,275,28],[260,18,276,28],[261,18,277,28],[262,18,278,28],[263,18,279,28],[264,18,280,28],[265,18,281,28],[266,18,282,28],[267,18,283,28],[268,18,284,28],[269,18,285,28],[270,18,286,28],[271,18,287,28],[272,18,288,28],[273,16,289,24],[273,17,289,25],[274,14,290,20],[275,12,291,16],[276,10,292,16],[277,12,292,25],[278,14,293,20],[278,21,293,27,"original"],[278,29,293,35],[278,30,293,36,"getStateForAction"],[278,47,293,53],[278,48,293,54,"state"],[278,53,293,59],[278,55,293,61,"action"],[278,61,293,67],[278,63,293,69,"options"],[278,70,293,76],[278,71,293,77],[279,12,294,16],[280,8,295,12],[281,6,296,8],[282,4,297,4],[282,5,297,5],[283,2,298,0],[283,3,298,1],[284,2,299,0,"exports"],[284,9,299,7],[284,10,299,8,"stackRouterOverride"],[284,29,299,27],[284,32,299,30,"stackRouterOverride"],[284,51,299,49],[285,2,300,0],[285,11,300,9,"getActionSingularIdFn"],[285,32,300,30,"getActionSingularIdFn"],[285,33,300,31,"actionGetId"],[285,44,300,42],[285,46,300,44,"name"],[285,50,300,48],[285,52,300,50],[286,4,301,4],[286,8,301,8],[286,15,301,15,"actionGetId"],[286,26,301,26],[286,31,301,31],[286,41,301,41],[286,43,301,43],[287,6,302,8],[287,13,302,16,"options"],[287,20,302,23],[287,24,302,28,"actionGetId"],[287,35,302,39],[287,36,302,40,"name"],[287,40,302,44],[287,42,302,46,"options"],[287,49,302,53],[287,50,302,54,"params"],[287,56,302,60],[287,60,302,64],[287,61,302,65],[287,62,302,66],[287,63,302,67],[288,4,303,4],[288,5,303,5],[288,11,304,9],[288,15,304,13,"actionGetId"],[288,26,304,24],[288,31,304,29],[288,35,304,33],[288,37,304,35],[289,6,305,8],[289,13,305,16,"options"],[289,20,305,23],[289,24,305,28],[289,25,305,29],[289,26,305,30],[289,28,305,32,"useScreens_1"],[289,40,305,44],[289,41,305,45,"getSingularId"],[289,54,305,58],[289,56,305,60,"name"],[289,60,305,64],[289,62,305,66,"options"],[289,69,305,73],[289,70,305,74],[290,4,306,4],[291,4,307,4],[291,11,307,11,"undefined"],[291,20,307,20],[292,2,308,0],[293,2,309,0],[294,0,310,0],[295,0,311,0],[296,0,312,0],[297,2,313,0],[297,11,313,9,"filterSingular"],[297,25,313,23,"filterSingular"],[297,26,313,24,"state"],[297,31,313,29],[297,33,313,31,"getId"],[297,38,313,36],[297,40,313,38],[298,4,314,4],[298,8,314,8],[298,9,314,9,"state"],[298,14,314,14],[298,16,314,16],[299,6,315,8],[299,13,315,15,"state"],[299,18,315,20],[300,4,316,4],[301,4,317,4],[301,8,317,8],[301,9,317,9,"state"],[301,14,317,14],[301,15,317,15,"routes"],[301,21,317,21],[301,23,317,23],[302,6,318,8],[302,13,318,15,"state"],[302,18,318,20],[303,4,319,4],[304,4,320,4],[304,8,320,10,"currentIndex"],[304,20,320,22],[304,23,320,25,"state"],[304,28,320,30],[304,29,320,31,"index"],[304,34,320,36],[304,38,320,40,"state"],[304,43,320,45],[304,44,320,46,"routes"],[304,50,320,52],[304,51,320,53,"length"],[304,57,320,59],[304,60,320,62],[304,61,320,63],[305,4,321,4],[305,8,321,10,"current"],[305,15,321,17],[305,18,321,20,"state"],[305,23,321,25],[305,24,321,26,"routes"],[305,30,321,32],[305,31,321,33,"currentIndex"],[305,43,321,45],[305,44,321,46],[306,4,322,4],[306,8,322,10,"name"],[306,12,322,14],[306,15,322,17,"current"],[306,22,322,24],[306,23,322,25,"name"],[306,27,322,29],[307,4,323,4],[307,8,323,10,"id"],[307,10,323,12],[307,13,323,15,"getId"],[307,18,323,20],[307,21,323,23],[308,6,323,25,"params"],[308,12,323,31],[308,14,323,33,"current"],[308,21,323,40],[308,22,323,41,"params"],[309,4,323,48],[309,5,323,49],[309,6,323,50],[310,4,324,4],[310,8,324,8],[310,9,324,9,"id"],[310,11,324,11],[310,13,324,13],[311,6,325,8],[311,13,325,15,"state"],[311,18,325,20],[312,4,326,4],[313,4,327,4],[314,4,328,4],[314,8,328,8,"routes"],[314,14,328,14],[314,17,328,17,"state"],[314,22,328,22],[314,23,328,23,"routes"],[314,29,328,29],[315,4,329,4,"routes"],[315,10,329,10],[315,13,329,13,"routes"],[315,19,329,19],[315,20,329,20,"filter"],[315,26,329,26],[315,27,329,27],[315,28,329,28,"route"],[315,33,329,33],[315,35,329,35,"index"],[315,40,329,40],[315,45,329,45],[316,6,330,8],[317,6,331,8],[317,10,331,12,"index"],[317,15,331,17],[317,20,331,22,"currentIndex"],[317,32,331,34],[317,34,331,36],[318,8,332,12],[318,15,332,19],[318,19,332,23],[319,6,333,8],[320,6,334,8],[321,6,335,8],[321,13,335,15,"name"],[321,17,335,19],[321,22,335,24,"route"],[321,27,335,29],[321,28,335,30,"name"],[321,32,335,34],[321,36,335,38,"id"],[321,38,335,40],[321,43,335,45,"getId"],[321,48,335,50],[321,51,335,53],[322,8,335,55,"params"],[322,14,335,61],[322,16,335,63,"route"],[322,21,335,68],[322,22,335,69,"params"],[323,6,335,76],[323,7,335,77],[323,8,335,78],[324,4,336,4],[324,5,336,5],[324,6,336,6],[325,4,337,4],[325,11,337,11],[326,6,338,8],[326,9,338,11,"state"],[326,14,338,16],[327,6,339,8,"index"],[327,11,339,13],[327,13,339,15,"routes"],[327,19,339,21],[327,20,339,22,"length"],[327,26,339,28],[327,29,339,31],[327,30,339,32],[328,6,340,8,"routes"],[329,4,341,4],[329,5,341,5],[330,2,342,0],[331,2,343,0],[331,6,343,6,"Stack"],[331,11,343,11],[331,14,343,14,"Object"],[331,20,343,20],[331,21,343,21,"assign"],[331,27,343,27],[331,28,343,29,"props"],[331,33,343,34],[331,37,343,39],[332,4,344,4],[332,8,344,4,"_ref"],[332,12,344,4],[332,15,344,41],[332,16,344,42],[332,17,344,43],[332,19,344,45,"LinkPreviewContext_1"],[332,39,344,65],[332,40,344,66,"useLinkPreviewContext"],[332,61,344,87],[332,63,344,89],[332,64,344,90],[333,6,344,12,"isStackAnimationDisabled"],[333,30,344,36],[333,33,344,36,"_ref"],[333,37,344,36],[333,38,344,12,"isStackAnimationDisabled"],[333,62,344,36],[334,4,345,4],[334,8,345,10,"screenOptions"],[334,21,345,23],[334,24,345,26],[334,25,345,27],[334,26,345,28],[334,28,345,30,"react_1"],[334,35,345,37],[334,36,345,38,"useMemo"],[334,43,345,45],[334,45,345,47],[334,51,345,53],[335,6,346,8],[335,10,346,14,"condition"],[335,19,346,23],[335,22,346,26,"isStackAnimationDisabled"],[335,46,346,50],[335,49,346,53],[335,55,346,59],[335,59,346,63],[335,62,346,66,"shouldDisableAnimationBasedOnParams"],[335,97,346,101],[336,6,347,8],[336,13,347,15,"disableAnimationInScreenOptions"],[336,44,347,46],[336,45,347,47,"props"],[336,50,347,52],[336,51,347,53,"screenOptions"],[336,64,347,66],[336,66,347,68,"condition"],[336,75,347,77],[336,76,347,78],[337,4,348,4],[337,5,348,5],[337,7,348,7],[337,8,348,8,"props"],[337,13,348,13],[337,14,348,14,"screenOptions"],[337,27,348,27],[337,29,348,29,"isStackAnimationDisabled"],[337,53,348,53],[337,54,348,54],[337,55,348,55],[338,4,349,4],[338,24,349,12,"_reactJsxDevRuntime"],[338,43,349,12],[338,44,349,12,"jsxDEV"],[338,50,349,12],[338,51,349,13,"RNStack"],[338,58,349,20],[339,6,349,20],[339,9,349,25,"props"],[339,14,349,30],[340,6,349,32,"screenOptions"],[340,19,349,45],[340,21,349,47,"screenOptions"],[340,34,349,61],[341,6,349,62,"UNSTABLE_router"],[341,21,349,77],[341,23,349,79,"exports"],[341,30,349,86],[341,31,349,87,"stackRouterOverride"],[342,4,349,107],[343,6,349,107,"fileName"],[343,14,349,107],[343,16,349,107,"_jsxFileName"],[343,28,349,107],[344,6,349,107,"lineNumber"],[344,16,349,107],[345,6,349,107,"columnNumber"],[345,18,349,107],[346,4,349,107],[346,11,349,108],[346,12,349,109],[347,2,350,0],[347,3,350,1],[347,5,350,3],[348,4,351,4,"Screen"],[348,10,351,10],[348,12,351,12,"RNStack"],[348,19,351,19],[348,20,351,20,"Screen"],[348,26,351,26],[349,4,352,4,"Protected"],[349,13,352,13],[349,15,352,15,"Protected_1"],[349,26,352,26],[349,27,352,27,"Protected"],[350,2,353,0],[350,3,353,1],[350,4,353,2],[351,2,354,0],[351,11,354,9,"disableAnimationInScreenOptions"],[351,42,354,40,"disableAnimationInScreenOptions"],[351,43,354,41,"options"],[351,50,354,48],[351,52,354,50,"condition"],[351,61,354,59],[351,63,354,61],[352,4,355,4],[352,8,355,8,"options"],[352,15,355,15],[352,19,355,19],[352,26,355,26,"options"],[352,33,355,33],[352,38,355,38],[352,48,355,48],[352,50,355,50],[353,6,356,8],[353,13,356,16,"props"],[353,18,356,21],[353,22,356,26],[354,8,357,12],[354,12,357,18,"oldOptions"],[354,22,357,28],[354,25,357,31,"options"],[354,32,357,38],[354,33,357,39,"props"],[354,38,357,44],[354,39,357,45],[355,8,358,12],[355,12,358,16,"condition"],[355,21,358,25],[355,22,358,26,"props"],[355,27,358,31],[355,28,358,32,"route"],[355,33,358,37],[355,34,358,38],[355,36,358,40],[356,10,359,16],[356,17,359,23],[357,12,360,20],[357,15,360,23,"oldOptions"],[357,25,360,33],[358,12,361,20,"animation"],[358,21,361,29],[358,23,361,31],[359,10,362,16],[359,11,362,17],[360,8,363,12],[361,8,364,12],[361,15,364,19,"oldOptions"],[361,25,364,29],[361,29,364,33],[361,30,364,34],[361,31,364,35],[362,6,365,8],[362,7,365,9],[363,4,366,4],[364,4,367,4],[364,11,367,12,"props"],[364,16,367,17],[364,20,367,22],[365,6,368,8],[365,10,368,12,"condition"],[365,19,368,21],[365,20,368,22,"props"],[365,25,368,27],[365,26,368,28,"route"],[365,31,368,33],[365,32,368,34],[365,34,368,36],[366,8,369,12],[366,15,369,19],[367,10,370,16],[367,14,370,20,"options"],[367,21,370,27],[367,25,370,31],[367,26,370,32],[367,27,370,33],[367,28,370,34],[368,10,371,16,"animation"],[368,19,371,25],[368,21,371,27],[369,8,372,12],[369,9,372,13],[370,6,373,8],[371,6,374,8],[371,13,374,15,"options"],[371,20,374,22],[371,24,374,26],[371,25,374,27],[371,26,374,28],[372,4,375,4],[372,5,375,5],[373,2,376,0],[374,2,377,0],[374,11,377,9,"shouldDisableAnimationBasedOnParams"],[374,46,377,44,"shouldDisableAnimationBasedOnParams"],[374,47,377,45,"route"],[374,52,377,50],[374,54,377,52],[375,4,378,4],[375,8,378,10,"expoParams"],[375,18,378,20],[375,21,378,23],[375,22,378,24],[375,23,378,25],[375,25,378,27,"navigationParams_1"],[375,43,378,45],[375,44,378,46,"getInternalExpoRouterParams"],[375,71,378,73],[375,73,378,75,"route"],[375,78,378,80],[375,79,378,81,"params"],[375,85,378,87],[375,86,378,88],[376,4,379,4],[376,11,379,11],[376,12,379,12],[376,13,379,13,"expoParams"],[376,23,379,23],[376,24,379,24,"__internal_expo_router_no_animation"],[376,59,379,59],[377,2,380,0],[378,2,381,0,"exports"],[378,9,381,7],[378,10,381,8,"default"],[378,17,381,15],[378,20,381,18,"Stack"],[378,25,381,23],[379,2,382,0],[379,6,382,6,"StackRouter"],[379,17,382,17],[379,20,382,21,"options"],[379,27,382,28],[379,31,382,33],[380,4,383,4],[380,8,383,10,"router"],[380,14,383,16],[380,17,383,19],[380,18,383,20],[380,19,383,21],[380,21,383,23,"native_1"],[380,29,383,31],[380,30,383,32,"StackRouter"],[380,41,383,43],[380,43,383,45,"options"],[380,50,383,52],[380,51,383,53],[381,4,384,4],[381,11,384,11],[382,6,385,8],[382,9,385,11,"router"],[382,15,385,17],[383,6,386,8],[383,9,386,11],[383,10,386,12],[383,11,386,13],[383,13,386,15,"exports"],[383,20,386,22],[383,21,386,23,"stackRouterOverride"],[383,40,386,42],[383,42,386,44,"router"],[383,48,386,50],[384,4,387,4],[384,5,387,5],[385,2,388,0],[385,3,388,1],[386,2,389,0,"exports"],[386,9,389,7],[386,10,389,8,"StackRouter"],[386,21,389,19],[386,24,389,22,"StackRouter"],[386,35,389,33],[387,0,389,34],[387,3]],"functionMap":{"names":["<global>","isStackAction","isPreviewAction","stackRouterOverride","getStateForAction","getIdFunction","state.routes.findLast$argument_0","state.preloadedRoutes.find$argument_0","state.routes.filter$argument_0","state.preloadedRoutes.filter$argument_0","state.routes.find$argument_0","state.routes.map$argument_0","getActionSingularIdFn","<anonymous>","filterSingular","routes.filter$argument_0","Object.assign$argument_0","disableAnimationInScreenOptions","shouldDisableAnimationBasedOnParams","StackRouter"],"mappings":"AAA;ACe;CDO;wBEC;+IFG;4BGU;2BCE;YCY;aDc;sDEe,yFF;0DES,6CF;2DGK,iEH;2DGI,yFH;6DI6C,0BJ;sEKyD,sDL;kDM4B,yFN;qDOK;6BPa;yGKwB,6EL;SD0B;CHE;AYE;eCE,oDD;eCG,2DD;CZG;AcK;2BCgB;KDO;CdM;4BgBC;+CHE;KGG;ChBE;AiBI;eJE;SIS;WJE;KIQ;CjBC;AkBC;ClBG;oBmBE;CnBM"},"hasCjsExports":true},"type":"js/module"}]}