{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"expo-font","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"2pRvmGok3jynt0eNgZSF3SdmQzk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":44,"index":83}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useFonts = useFonts;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _expoFont = require(_dependencyMap[1], \"expo-font\");\n  var _react = require(_dependencyMap[2], \"react\");\n  /**\n   * Load a map of custom fonts to use in textual elements.\n   * The map keys are used as font names, and can be used with `fontFamily: <name>;`.\n   * It returns a boolean describing if all fonts are loaded.\n   *\n   * Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n   *\n   * @see https://docs.expo.io/versions/latest/sdk/font/\n   * @example const [loaded, error] = useFonts(...);\n   */\n  function useFonts(map) {\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n    (0, _react.useEffect)(() => {\n      (0, _expoFont.loadAsync)(map).then(() => setLoaded(true)).catch(setError);\n    }, []);\n    return [loaded, error];\n  }\n});","lineCount":41,"map":[[12,2,14,0,"exports"],[12,9,14,0],[12,10,14,0,"useFonts"],[12,18,14,0],[12,21,14,0,"useFonts"],[12,29,14,0],[13,2,25,1],[13,6,25,1,"_babelRuntimeHelpersSlicedToArray"],[13,39,25,1],[13,42,25,1,"require"],[13,49,25,1],[13,50,25,1,"_dependencyMap"],[13,64,25,1],[14,2,25,1],[14,6,25,1,"_slicedToArray"],[14,20,25,1],[14,23,25,1,"_interopDefault"],[14,38,25,1],[14,39,25,1,"_babelRuntimeHelpersSlicedToArray"],[14,72,25,1],[15,2,1,0],[15,6,1,0,"_expoFont"],[15,15,1,0],[15,18,1,0,"require"],[15,25,1,0],[15,26,1,0,"_dependencyMap"],[15,40,1,0],[16,2,2,0],[16,6,2,0,"_react"],[16,12,2,0],[16,15,2,0,"require"],[16,22,2,0],[16,23,2,0,"_dependencyMap"],[16,37,2,0],[17,2,4,0],[18,0,5,0],[19,0,6,0],[20,0,7,0],[21,0,8,0],[22,0,9,0],[23,0,10,0],[24,0,11,0],[25,0,12,0],[26,0,13,0],[27,2,14,7],[27,11,14,16,"useFonts"],[27,19,14,24,"useFonts"],[27,20,14,25,"map"],[27,23,14,28],[27,25,14,30],[28,4,15,2],[28,8,15,2,"_useState"],[28,17,15,2],[28,20,15,30],[28,24,15,30,"useState"],[28,30,15,38],[28,31,15,38,"useState"],[28,39,15,38],[28,41,15,39],[28,46,15,44],[28,47,15,45],[29,6,15,45,"_useState2"],[29,16,15,45],[29,23,15,45,"_slicedToArray"],[29,37,15,45],[29,38,15,45,"default"],[29,45,15,45],[29,47,15,45,"_useState"],[29,56,15,45],[30,6,15,9,"loaded"],[30,12,15,15],[30,15,15,15,"_useState2"],[30,25,15,15],[31,6,15,17,"setLoaded"],[31,15,15,26],[31,18,15,26,"_useState2"],[31,28,15,26],[32,4,16,2],[32,8,16,2,"_useState3"],[32,18,16,2],[32,21,16,28],[32,25,16,28,"useState"],[32,31,16,36],[32,32,16,36,"useState"],[32,40,16,36],[32,42,16,37],[32,46,16,41],[32,47,16,42],[33,6,16,42,"_useState4"],[33,16,16,42],[33,23,16,42,"_slicedToArray"],[33,37,16,42],[33,38,16,42,"default"],[33,45,16,42],[33,47,16,42,"_useState3"],[33,57,16,42],[34,6,16,9,"error"],[34,11,16,14],[34,14,16,14,"_useState4"],[34,24,16,14],[35,6,16,16,"setError"],[35,14,16,24],[35,17,16,24,"_useState4"],[35,27,16,24],[36,4,18,2],[36,8,18,2,"useEffect"],[36,14,18,11],[36,15,18,11,"useEffect"],[36,24,18,11],[36,26,18,12],[36,32,18,18],[37,6,19,4],[37,10,19,4,"loadAsync"],[37,19,19,13],[37,20,19,13,"loadAsync"],[37,29,19,13],[37,31,19,14,"map"],[37,34,19,17],[37,35,19,18],[37,36,20,7,"then"],[37,40,20,11],[37,41,20,12],[37,47,20,18,"setLoaded"],[37,56,20,27],[37,57,20,28],[37,61,20,32],[37,62,20,33],[37,63,20,34],[37,64,21,7,"catch"],[37,69,21,12],[37,70,21,13,"setError"],[37,78,21,21],[37,79,21,22],[38,4,22,2],[38,5,22,3],[38,7,22,5],[38,9,22,7],[38,10,22,8],[39,4,24,2],[39,11,24,9],[39,12,24,10,"loaded"],[39,18,24,16],[39,20,24,18,"error"],[39,25,24,23],[39,26,24,24],[40,2,25,0],[41,0,25,1],[41,3]],"functionMap":{"names":["<global>","useFonts","useEffect$argument_0","loadAsync.then$argument_0"],"mappings":"AAA;OCa;YCI;YCE,qBD;GDE;CDG"},"hasCjsExports":false},"type":"js/module"}]}