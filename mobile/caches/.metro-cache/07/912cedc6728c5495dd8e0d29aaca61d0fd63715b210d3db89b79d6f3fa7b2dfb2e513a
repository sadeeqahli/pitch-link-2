{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncIterator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"iAa+RToycgxigMSWyQzterF69/I=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":38,"index":62}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"streamedQuery\", {\n    enumerable: true,\n    get: function () {\n      return streamedQuery;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersAsyncIterator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncIterator\");\n  var _asyncIterator = _interopDefault(_babelRuntimeHelpersAsyncIterator);\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  // src/streamedQuery.ts\n\n  function streamedQuery(_ref) {\n    var streamFn = _ref.streamFn,\n      _ref$refetchMode = _ref.refetchMode,\n      refetchMode = _ref$refetchMode === void 0 ? \"reset\" : _ref$refetchMode,\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? (items, chunk) => (0, _utilsJs.addToEnd)(items, chunk) : _ref$reducer,\n      _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? [] : _ref$initialValue;\n    return /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* (context) {\n        var query = context.client.getQueryCache().find({\n          queryKey: context.queryKey,\n          exact: true\n        });\n        var isRefetch = !!query && query.state.data !== void 0;\n        if (isRefetch && refetchMode === \"reset\") {\n          query.setState({\n            status: \"pending\",\n            data: void 0,\n            error: null,\n            fetchStatus: \"fetching\"\n          });\n        }\n        var result = initialValue;\n        var stream = yield streamFn(context);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          var _loop = function* () {\n            var chunk = _step.value;\n            {\n              if (context.signal.aborted) {\n                return 1; // break\n              }\n              if (!isRefetch || refetchMode !== \"replace\") {\n                context.client.setQueryData(context.queryKey, prev => reducer(prev === void 0 ? initialValue : prev, chunk));\n              }\n              result = reducer(result, chunk);\n            }\n          };\n          for (var _iterator = (0, _asyncIterator.default)(stream), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            if (yield* _loop()) break;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n          context.client.setQueryData(context.queryKey, result);\n        }\n        return context.client.getQueryData(context.queryKey);\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n});","lineCount":93,"map":[[12,2,40,0,"Object"],[12,8,40,0],[12,9,40,0,"defineProperty"],[12,23,40,0],[12,24,40,0,"exports"],[12,31,40,0],[13,4,40,0,"enumerable"],[13,14,40,0],[14,4,40,0,"get"],[14,7,40,0],[14,18,40,0,"get"],[14,19,40,0],[15,6,40,0],[15,13,41,2,"streamedQuery"],[15,26,41,15],[16,4,41,15],[17,2,41,15],[18,2,42,2],[18,6,42,2,"_babelRuntimeHelpersAsyncToGenerator"],[18,42,42,2],[18,45,42,2,"require"],[18,52,42,2],[18,53,42,2,"_dependencyMap"],[18,67,42,2],[19,2,42,2],[19,6,42,2,"_asyncToGenerator"],[19,23,42,2],[19,26,42,2,"_interopDefault"],[19,41,42,2],[19,42,42,2,"_babelRuntimeHelpersAsyncToGenerator"],[19,78,42,2],[20,2,42,2],[20,6,42,2,"_babelRuntimeHelpersAsyncIterator"],[20,39,42,2],[20,42,42,2,"require"],[20,49,42,2],[20,50,42,2,"_dependencyMap"],[20,64,42,2],[21,2,42,2],[21,6,42,2,"_asyncIterator"],[21,20,42,2],[21,23,42,2,"_interopDefault"],[21,38,42,2],[21,39,42,2,"_babelRuntimeHelpersAsyncIterator"],[21,72,42,2],[22,2,2,0],[22,6,2,0,"_utilsJs"],[22,14,2,0],[22,17,2,0,"require"],[22,24,2,0],[22,25,2,0,"_dependencyMap"],[22,39,2,0],[23,2,1,0],[25,2,3,0],[25,11,3,9,"streamedQuery"],[25,24,3,22,"streamedQuery"],[25,25,3,22,"_ref"],[25,29,3,22],[25,31,8,3],[26,4,8,3],[26,8,4,2,"streamFn"],[26,16,4,10],[26,19,4,10,"_ref"],[26,23,4,10],[26,24,4,2,"streamFn"],[26,32,4,10],[27,6,4,10,"_ref$refetchMode"],[27,22,4,10],[27,25,4,10,"_ref"],[27,29,4,10],[27,30,5,2,"refetchMode"],[27,41,5,13],[28,6,5,2,"refetchMode"],[28,17,5,13],[28,20,5,13,"_ref$refetchMode"],[28,36,5,13],[28,50,5,16],[28,57,5,23],[28,60,5,23,"_ref$refetchMode"],[28,76,5,23],[29,6,5,23,"_ref$reducer"],[29,18,5,23],[29,21,5,23,"_ref"],[29,25,5,23],[29,26,6,2,"reducer"],[29,33,6,9],[30,6,6,2,"reducer"],[30,13,6,9],[30,16,6,9,"_ref$reducer"],[30,28,6,9],[30,42,6,12],[30,43,6,13,"items"],[30,48,6,18],[30,50,6,20,"chunk"],[30,55,6,25],[30,60,6,30],[30,64,6,30,"addToEnd"],[30,72,6,38],[30,73,6,38,"addToEnd"],[30,81,6,38],[30,83,6,39,"items"],[30,88,6,44],[30,90,6,46,"chunk"],[30,95,6,51],[30,96,6,52],[30,99,6,52,"_ref$reducer"],[30,111,6,52],[31,6,6,52,"_ref$initialValue"],[31,23,6,52],[31,26,6,52,"_ref"],[31,30,6,52],[31,31,7,2,"initialValue"],[31,43,7,14],[32,6,7,2,"initialValue"],[32,18,7,14],[32,21,7,14,"_ref$initialValue"],[32,38,7,14],[32,52,7,17],[32,54,7,19],[32,57,7,19,"_ref$initialValue"],[32,74,7,19],[33,4,9,2],[34,6,9,2],[34,10,9,2,"_ref2"],[34,15,9,2],[34,22,9,2,"_asyncToGenerator"],[34,39,9,2],[34,40,9,2,"default"],[34,47,9,2],[34,49,9,9],[34,60,9,16,"context"],[34,67,9,23],[34,69,9,28],[35,8,10,4],[35,12,10,10,"query"],[35,17,10,15],[35,20,10,18,"context"],[35,27,10,25],[35,28,10,26,"client"],[35,34,10,32],[35,35,10,33,"getQueryCache"],[35,48,10,46],[35,49,10,47],[35,50,10,48],[35,51,10,49,"find"],[35,55,10,53],[35,56,10,54],[36,10,10,56,"queryKey"],[36,18,10,64],[36,20,10,66,"context"],[36,27,10,73],[36,28,10,74,"queryKey"],[36,36,10,82],[37,10,10,84,"exact"],[37,15,10,89],[37,17,10,91],[38,8,10,96],[38,9,10,97],[38,10,10,98],[39,8,11,4],[39,12,11,10,"isRefetch"],[39,21,11,19],[39,24,11,22],[39,25,11,23],[39,26,11,24,"query"],[39,31,11,29],[39,35,11,33,"query"],[39,40,11,38],[39,41,11,39,"state"],[39,46,11,44],[39,47,11,45,"data"],[39,51,11,49],[39,56,11,54],[39,61,11,59],[39,62,11,60],[40,8,12,4],[40,12,12,8,"isRefetch"],[40,21,12,17],[40,25,12,21,"refetchMode"],[40,36,12,32],[40,41,12,37],[40,48,12,44],[40,50,12,46],[41,10,13,6,"query"],[41,15,13,11],[41,16,13,12,"setState"],[41,24,13,20],[41,25,13,21],[42,12,14,8,"status"],[42,18,14,14],[42,20,14,16],[42,29,14,25],[43,12,15,8,"data"],[43,16,15,12],[43,18,15,14],[43,23,15,19],[43,24,15,20],[44,12,16,8,"error"],[44,17,16,13],[44,19,16,15],[44,23,16,19],[45,12,17,8,"fetchStatus"],[45,23,17,19],[45,25,17,21],[46,10,18,6],[46,11,18,7],[46,12,18,8],[47,8,19,4],[48,8,20,4],[48,12,20,8,"result"],[48,18,20,14],[48,21,20,17,"initialValue"],[48,33,20,29],[49,8,21,4],[49,12,21,10,"stream"],[49,18,21,16],[49,27,21,25,"streamFn"],[49,35,21,33],[49,36,21,34,"context"],[49,43,21,41],[49,44,21,42],[50,8,21,43],[50,12,21,43,"_iteratorAbruptCompletion"],[50,37,21,43],[51,8,21,43],[51,12,21,43,"_didIteratorError"],[51,29,21,43],[52,8,21,43],[52,12,21,43,"_iteratorError"],[52,26,21,43],[53,8,21,43],[54,10,21,43],[54,14,21,43,"_loop"],[54,19,21,43],[54,32,21,43,"_loop"],[54,33,21,43],[54,35,22,38],[55,12,22,38],[55,16,22,21,"chunk"],[55,21,22,26],[55,24,22,26,"_step"],[55,29,22,26],[55,30,22,26,"value"],[55,35,22,26],[56,12,22,26],[57,14,23,6],[57,18,23,10,"context"],[57,25,23,17],[57,26,23,18,"signal"],[57,32,23,24],[57,33,23,25,"aborted"],[57,40,23,32],[57,42,23,34],[58,16,23,34],[59,14,25,6],[60,14,26,6],[60,18,26,10],[60,19,26,11,"isRefetch"],[60,28,26,20],[60,32,26,24,"refetchMode"],[60,43,26,35],[60,48,26,40],[60,57,26,49],[60,59,26,51],[61,16,27,8,"context"],[61,23,27,15],[61,24,27,16,"client"],[61,30,27,22],[61,31,27,23,"setQueryData"],[61,43,27,35],[61,44,28,10,"context"],[61,51,28,17],[61,52,28,18,"queryKey"],[61,60,28,26],[61,62,29,11,"prev"],[61,66,29,15],[61,70,29,20,"reducer"],[61,77,29,27],[61,78,29,28,"prev"],[61,82,29,32],[61,87,29,37],[61,92,29,42],[61,93,29,43],[61,96,29,46,"initialValue"],[61,108,29,58],[61,111,29,61,"prev"],[61,115,29,65],[61,117,29,67,"chunk"],[61,122,29,72],[61,123,30,8],[61,124,30,9],[62,14,31,6],[63,14,32,6,"result"],[63,20,32,12],[63,23,32,15,"reducer"],[63,30,32,22],[63,31,32,23,"result"],[63,37,32,29],[63,39,32,31,"chunk"],[63,44,32,36],[63,45,32,37],[64,12,32,38],[65,10,33,4],[65,11,33,5],[66,10,22,4],[66,19,22,4,"_iterator"],[66,28,22,4],[66,35,22,4,"_asyncIterator"],[66,49,22,4],[66,50,22,4,"default"],[66,57,22,4],[66,59,22,30,"stream"],[66,65,22,36],[66,68,22,36,"_step"],[66,73,22,36],[66,75,22,36,"_iteratorAbruptCompletion"],[66,100,22,36],[66,105,22,36,"_step"],[66,110,22,36],[66,119,22,36,"_iterator"],[66,128,22,36],[66,129,22,36,"next"],[66,133,22,36],[66,137,22,36,"done"],[66,141,22,36],[66,143,22,36,"_iteratorAbruptCompletion"],[66,168,22,36],[67,12,22,36],[67,23,22,36,"_loop"],[67,28,22,36],[67,32,24,8],[68,10,24,14],[69,8,33,5],[69,17,33,5,"err"],[69,20,33,5],[70,10,33,5,"_didIteratorError"],[70,27,33,5],[71,10,33,5,"_iteratorError"],[71,24,33,5],[71,27,33,5,"err"],[71,30,33,5],[72,8,33,5],[73,10,33,5],[74,12,33,5],[74,16,33,5,"_iteratorAbruptCompletion"],[74,41,33,5],[74,45,33,5,"_iterator"],[74,54,33,5],[74,55,33,5,"return"],[74,61,33,5],[75,14,33,5],[75,20,33,5,"_iterator"],[75,29,33,5],[75,30,33,5,"return"],[75,36,33,5],[76,12,33,5],[77,10,33,5],[78,12,33,5],[78,16,33,5,"_didIteratorError"],[78,33,33,5],[79,14,33,5],[79,20,33,5,"_iteratorError"],[79,34,33,5],[80,12,33,5],[81,10,33,5],[82,8,33,5],[83,8,34,4],[83,12,34,8,"isRefetch"],[83,21,34,17],[83,25,34,21,"refetchMode"],[83,36,34,32],[83,41,34,37],[83,50,34,46],[83,54,34,50],[83,55,34,51,"context"],[83,62,34,58],[83,63,34,59,"signal"],[83,69,34,65],[83,70,34,66,"aborted"],[83,77,34,73],[83,79,34,75],[84,10,35,6,"context"],[84,17,35,13],[84,18,35,14,"client"],[84,24,35,20],[84,25,35,21,"setQueryData"],[84,37,35,33],[84,38,35,34,"context"],[84,45,35,41],[84,46,35,42,"queryKey"],[84,54,35,50],[84,56,35,52,"result"],[84,62,35,58],[84,63,35,59],[85,8,36,4],[86,8,37,4],[86,15,37,11,"context"],[86,22,37,18],[86,23,37,19,"client"],[86,29,37,25],[86,30,37,26,"getQueryData"],[86,42,37,38],[86,43,37,39,"context"],[86,50,37,46],[86,51,37,47,"queryKey"],[86,59,37,55],[86,60,37,56],[87,6,38,2],[87,7,38,3],[88,6,38,3],[88,23,38,3,"_x"],[88,25,38,3],[89,8,38,3],[89,15,38,3,"_ref2"],[89,20,38,3],[89,21,38,3,"apply"],[89,26,38,3],[89,33,38,3,"arguments"],[89,42,38,3],[90,6,38,3],[91,4,38,3],[92,2,39,0],[93,0,39,1],[93,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;YCG,wCD;SCG;UCoB,+DD;GDS;CDC"},"hasCjsExports":false},"type":"js/module"}]}