{"dependencies":[{"name":"../WorkletEventHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":77},"end":{"line":4,"column":61,"index":138}}],"key":"588C2ttWmFfH+Cx2zV7Dtb/CLj8=","exportNames":["*"],"imports":1}},{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":272},"end":{"line":7,"column":38,"index":310}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0=","exportNames":["*"],"imports":1}},{"name":"./useHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":311},"end":{"line":8,"column":42,"index":353}}],"key":"4fwTVy9JjjGj2GzFTCIyp4pa48c=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useComposedEventHandler = useComposedEventHandler;\n  var _WorkletEventHandler = require(_dependencyMap[0], \"../WorkletEventHandler\");\n  var _useEvent = require(_dependencyMap[1], \"./useEvent\");\n  var _useHandler2 = require(_dependencyMap[2], \"./useHandler\");\n  /**\n   * Lets you compose multiple event handlers based on\n   * [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   * hook.\n   *\n   * @param handlers - An array of event handlers created using\n   *   [useEvent](https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent)\n   *   hook.\n   * @returns An object you need to pass to a coresponding \"onEvent\" prop on an\n   *   `Animated` component (for example handlers responsible for `onScroll` event\n   *   go to `onScroll` prop).\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useComposedEventHandler\n   */\n  // @ts-expect-error This overload is required by our API.\n  var _worklet_5537037102218_init_data = {\n    code: \"function reactNativeReanimated_useComposedEventHandlerTs1(event){const{workletsMap}=this.__closure;if(workletsMap[event.eventName]){workletsMap[event.eventName].forEach(function(worklet){return worklet(event);});}}\",\n    location: \"/Users/macbookair/Desktop/untitled folder/sadeeq/pitch-link-2/mobile/node_modules/react-native-reanimated/src/hook/useComposedEventHandler.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_useComposedEventHandlerTs1\\\",\\\"event\\\",\\\"workletsMap\\\",\\\"__closure\\\",\\\"eventName\\\",\\\"forEach\\\",\\\"worklet\\\"],\\\"sources\\\":[\\\"/Users/macbookair/Desktop/untitled folder/sadeeq/pitch-link-2/mobile/node_modules/react-native-reanimated/src/hook/useComposedEventHandler.ts\\\"],\\\"mappings\\\":\\\"AA6EK,SAAAA,gDAAUA,CAAAC,KAAA,QAAAC,WAAA,OAAAC,SAAA,CAET,GAAID,WAAW,CAACD,KAAK,CAACG,SAAS,CAAC,CAAE,CAChCF,WAAW,CAACD,KAAK,CAACG,SAAS,CAAC,CAACC,OAAO,CAAE,SAAAC,OAAO,QAAK,CAAAA,OAAO,CAACL,KAAK,CAAC,GAAC,CACnE,CACF\\\",\\\"ignoreList\\\":[]}\"\n  };\n  function useComposedEventHandler(handlers) {\n    // Record of handlers' worklets to calculate deps diffs. We use the record type to match the useHandler API requirements\n    var workletsRecord = {};\n    // Summed event names for registration\n    var composedEventNames = new Set();\n    // Map that holds worklets for specific handled events\n    var workletsMap = {};\n    handlers.filter(h => h !== null).forEach(handler => {\n      // EventHandlerProcessed is the return type of useEvent and has to be force casted to EventHandlerInternal, because we need WorkletEventHandler object\n      var _ref = handler,\n        workletEventHandler = _ref.workletEventHandler;\n      if (workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler) {\n        workletEventHandler.eventNames.forEach(eventName => {\n          composedEventNames.add(eventName);\n          if (workletsMap[eventName]) {\n            workletsMap[eventName].push(workletEventHandler.worklet);\n          } else {\n            workletsMap[eventName] = [workletEventHandler.worklet];\n          }\n          var handlerName = eventName + `${workletsMap[eventName].length}`;\n          workletsRecord[handlerName] = workletEventHandler.worklet;\n        });\n      }\n    });\n    var _useHandler = (0, _useHandler2.useHandler)(workletsRecord),\n      doDependenciesDiffer = _useHandler.doDependenciesDiffer;\n    return (0, _useEvent.useEvent)(function reactNativeReanimated_useComposedEventHandlerTs1Factory(_ref2) {\n      var _worklet_5537037102218_init_data = _ref2._worklet_5537037102218_init_data,\n        workletsMap = _ref2.workletsMap;\n      var _e = [new global.Error(), -2, -27];\n      var reactNativeReanimated_useComposedEventHandlerTs1 = function (event) {\n        if (workletsMap[event.eventName]) {\n          workletsMap[event.eventName].forEach(worklet => worklet(event));\n        }\n      };\n      reactNativeReanimated_useComposedEventHandlerTs1.__closure = {\n        workletsMap\n      };\n      reactNativeReanimated_useComposedEventHandlerTs1.__workletHash = 5537037102218;\n      reactNativeReanimated_useComposedEventHandlerTs1.__pluginVersion = \"0.5.1\";\n      reactNativeReanimated_useComposedEventHandlerTs1.__initData = _worklet_5537037102218_init_data;\n      reactNativeReanimated_useComposedEventHandlerTs1.__stackDetails = _e;\n      return reactNativeReanimated_useComposedEventHandlerTs1;\n    }({\n      _worklet_5537037102218_init_data,\n      workletsMap\n    }), Array.from(composedEventNames), doDependenciesDiffer);\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,39,0,"exports"],[7,9,39,0],[7,10,39,0,"useComposedEventHandler"],[7,33,39,0],[7,36,39,0,"useComposedEventHandler"],[7,59,39,0],[8,2,4,0],[8,6,4,0,"_WorkletEventHandler"],[8,26,4,0],[8,29,4,0,"require"],[8,36,4,0],[8,37,4,0,"_dependencyMap"],[8,51,4,0],[9,2,7,0],[9,6,7,0,"_useEvent"],[9,15,7,0],[9,18,7,0,"require"],[9,25,7,0],[9,26,7,0,"_dependencyMap"],[9,40,7,0],[10,2,8,0],[10,6,8,0,"_useHandler2"],[10,18,8,0],[10,21,8,0,"require"],[10,28,8,0],[10,29,8,0,"_dependencyMap"],[10,43,8,0],[11,2,18,0],[12,0,19,0],[13,0,20,0],[14,0,21,0],[15,0,22,0],[16,0,23,0],[17,0,24,0],[18,0,25,0],[19,0,26,0],[20,0,27,0],[21,0,28,0],[22,0,29,0],[23,0,30,0],[24,2,31,0],[25,2,31,0],[25,6,31,0,"_worklet_5537037102218_init_data"],[25,38,31,0],[26,4,31,0,"code"],[26,8,31,0],[27,4,31,0,"location"],[27,12,31,0],[28,4,31,0,"sourceMap"],[28,13,31,0],[29,2,31,0],[30,2,39,7],[30,11,39,16,"useComposedEventHandler"],[30,34,39,39,"useComposedEventHandler"],[30,35,42,2,"handlers"],[30,43,42,60],[30,45,42,62],[31,4,43,2],[32,4,44,2],[32,8,44,8,"workletsRecord"],[32,22,44,55],[32,25,44,58],[32,26,44,59],[32,27,44,60],[33,4,45,2],[34,4,46,2],[34,8,46,8,"composedEventNames"],[34,26,46,26],[34,29,46,29],[34,33,46,33,"Set"],[34,36,46,36],[34,37,46,45],[34,38,46,46],[35,4,47,2],[36,4,48,2],[36,8,48,8,"workletsMap"],[36,19,50,3],[36,22,50,6],[36,23,50,7],[36,24,50,8],[37,4,52,2,"handlers"],[37,12,52,10],[37,13,53,5,"filter"],[37,19,53,11],[37,20,53,13,"h"],[37,21,53,14],[37,25,53,19,"h"],[37,26,53,20],[37,31,53,25],[37,35,53,29],[37,36,53,30],[37,37,54,5,"forEach"],[37,44,54,12],[37,45,54,14,"handler"],[37,52,54,21],[37,56,54,26],[38,6,55,6],[39,6,56,6],[39,10,56,6,"_ref"],[39,14,56,6],[39,17,57,8,"handler"],[39,24,57,15],[40,8,56,14,"workletEventHandler"],[40,27,56,33],[40,30,56,33,"_ref"],[40,34,56,33],[40,35,56,14,"workletEventHandler"],[40,54,56,33],[41,6,58,6],[41,10,58,10,"workletEventHandler"],[41,29,58,29],[41,41,58,41,"WorkletEventHandler"],[41,61,58,60],[41,62,58,60,"WorkletEventHandler"],[41,81,58,60],[41,83,58,62],[42,8,59,8,"workletEventHandler"],[42,27,59,27],[42,28,59,28,"eventNames"],[42,38,59,38],[42,39,59,39,"forEach"],[42,46,59,46],[42,47,59,48,"eventName"],[42,56,59,57],[42,60,59,62],[43,10,60,10,"composedEventNames"],[43,28,60,28],[43,29,60,29,"add"],[43,32,60,32],[43,33,60,33,"eventName"],[43,42,60,42],[43,43,60,43],[44,10,62,10],[44,14,62,14,"workletsMap"],[44,25,62,25],[44,26,62,26,"eventName"],[44,35,62,35],[44,36,62,36],[44,38,62,38],[45,12,63,12,"workletsMap"],[45,23,63,23],[45,24,63,24,"eventName"],[45,33,63,33],[45,34,63,34],[45,35,63,35,"push"],[45,39,63,39],[45,40,63,40,"workletEventHandler"],[45,59,63,59],[45,60,63,60,"worklet"],[45,67,63,67],[45,68,63,68],[46,10,64,10],[46,11,64,11],[46,17,64,17],[47,12,65,12,"workletsMap"],[47,23,65,23],[47,24,65,24,"eventName"],[47,33,65,33],[47,34,65,34],[47,37,65,37],[47,38,65,38,"workletEventHandler"],[47,57,65,57],[47,58,65,58,"worklet"],[47,65,65,65],[47,66,65,66],[48,10,66,10],[49,10,68,10],[49,14,68,16,"handlerName"],[49,25,68,27],[49,28,68,30,"eventName"],[49,37,68,39],[49,40,68,42],[49,43,68,45,"workletsMap"],[49,54,68,56],[49,55,68,57,"eventName"],[49,64,68,66],[49,65,68,67],[49,66,68,68,"length"],[49,72,68,74],[49,74,68,76],[50,10,69,10,"workletsRecord"],[50,24,69,24],[50,25,69,25,"handlerName"],[50,36,69,36],[50,37,69,37],[50,40,70,12,"workletEventHandler"],[50,59,70,31],[50,60,70,32,"worklet"],[50,67,70,58],[51,8,71,8],[51,9,71,9],[51,10,71,10],[52,6,72,6],[53,4,73,4],[53,5,73,5],[53,6,73,6],[54,4,75,2],[54,8,75,2,"_useHandler"],[54,19,75,2],[54,22,75,35],[54,26,75,35,"useHandler"],[54,38,75,45],[54,39,75,45,"useHandler"],[54,49,75,45],[54,51,75,46,"workletsRecord"],[54,65,75,60],[54,66,75,61],[55,6,75,10,"doDependenciesDiffer"],[55,26,75,30],[55,29,75,30,"_useHandler"],[55,40,75,30],[55,41,75,10,"doDependenciesDiffer"],[55,61,75,30],[56,4,77,2],[56,11,77,9],[56,15,77,9,"useEvent"],[56,24,77,17],[56,25,77,17,"useEvent"],[56,33,77,17],[56,35,78,4],[56,44,78,4,"reactNativeReanimated_useComposedEventHandlerTs1Factory"],[56,100,78,4,"_ref2"],[56,105,78,4],[57,6,78,4],[57,10,78,4,"_worklet_5537037102218_init_data"],[57,42,78,4],[57,45,78,4,"_ref2"],[57,50,78,4],[57,51,78,4,"_worklet_5537037102218_init_data"],[57,83,78,4],[58,8,80,10,"workletsMap"],[58,19,80,21],[58,22,80,21,"_ref2"],[58,27,80,21],[58,28,80,10,"workletsMap"],[58,39,80,21],[59,6,80,21],[59,10,80,21,"_e"],[59,12,80,21],[59,20,80,21,"global"],[59,26,80,21],[59,27,80,21,"Error"],[59,32,80,21],[60,6,80,21],[60,10,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[60,58,80,21],[60,70,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[60,71,78,5,"event"],[60,76,78,10],[60,78,78,15],[61,8,80,6],[61,12,80,10,"workletsMap"],[61,23,80,21],[61,24,80,22,"event"],[61,29,80,27],[61,30,80,28,"eventName"],[61,39,80,37],[61,40,80,38],[61,42,80,40],[62,10,81,8,"workletsMap"],[62,21,81,19],[62,22,81,20,"event"],[62,27,81,25],[62,28,81,26,"eventName"],[62,37,81,35],[62,38,81,36],[62,39,81,37,"forEach"],[62,46,81,44],[62,47,81,46,"worklet"],[62,54,81,53],[62,58,81,58,"worklet"],[62,65,81,65],[62,66,81,66,"event"],[62,71,81,71],[62,72,81,72],[62,73,81,73],[63,8,82,6],[64,6,83,4],[64,7,83,5],[65,6,83,5,"reactNativeReanimated_useComposedEventHandlerTs1"],[65,54,83,5],[65,55,83,5,"__closure"],[65,64,83,5],[66,8,80,10,"workletsMap"],[67,6,80,21],[68,6,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[68,54,80,21],[68,55,80,21,"__workletHash"],[68,68,80,21],[69,6,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[69,54,80,21],[69,55,80,21,"__pluginVersion"],[69,70,80,21],[70,6,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[70,54,80,21],[70,55,80,21,"__initData"],[70,65,80,21],[70,68,80,21,"_worklet_5537037102218_init_data"],[70,100,80,21],[71,6,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[71,54,80,21],[71,55,80,21,"__stackDetails"],[71,69,80,21],[71,72,80,21,"_e"],[71,74,80,21],[72,6,80,21],[72,13,80,21,"reactNativeReanimated_useComposedEventHandlerTs1"],[72,61,80,21],[73,4,80,21],[73,5,78,4],[74,6,78,4,"_worklet_5537037102218_init_data"],[74,38,78,4],[75,6,80,10,"workletsMap"],[76,4,80,21],[76,8,84,4,"Array"],[76,13,84,9],[76,14,84,10,"from"],[76,18,84,14],[76,19,84,15,"composedEventNames"],[76,37,84,33],[76,38,84,34],[76,40,85,4,"doDependenciesDiffer"],[76,60,86,2],[76,61,86,3],[77,2,87,0],[78,0,87,1],[78,3]],"functionMap":{"names":["<global>","useComposedEventHandler","handlers.filter$argument_0","handlers.filter.forEach$argument_0","workletEventHandler.eventNames.forEach$argument_0","useEvent$argument_0","workletsMap.event.eventName.forEach$argument_0"],"mappings":"AAA;OCsC;YCc,iBD;aEC;+CCK;SDY;KFE;IIK;6CCG,2BD;KJE;CDI"},"hasCjsExports":false},"type":"js/module"}]}