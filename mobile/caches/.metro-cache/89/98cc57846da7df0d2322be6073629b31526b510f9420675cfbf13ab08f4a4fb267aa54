{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.resolveBlurhashString = resolveBlurhashString;\n  exports.resolveThumbhashString = resolveThumbhashString;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  function hashToUri(type, hash) {\n    var encodedBlurhash = encodeURI(hash).replace(/#/g, '%23').replace(/\\?/g, '%3F');\n    return `${type}:/${encodedBlurhash}`;\n  }\n\n  /**\n   * Converts a blurhash string (`blurhash:/<hash>/<width>/<height>` or <hash>/<width>/<height>) into an `ImageSource`.\n   *\n   * @return An ImageSource representing the provided blurhash.\n   * */\n  function resolveBlurhashString(str) {\n    var _str$replace$split = str.replace(/^blurhash:\\//, '').split('/'),\n      _str$replace$split2 = (0, _slicedToArray.default)(_str$replace$split, 3),\n      blurhash = _str$replace$split2[0],\n      width = _str$replace$split2[1],\n      height = _str$replace$split2[2];\n    return {\n      uri: hashToUri('blurhash', blurhash),\n      width: parseInt(width, 10) || 16,\n      height: parseInt(height, 10) || 16\n    };\n  }\n\n  /**\n   * Converts a thumbhash string (`thumbhash:/<hash>` or `<hash>`) into an `ImageSource`.\n   *\n   * @return An ImageSource representing the provided thumbhash.\n   * */\n  function resolveThumbhashString(str) {\n    // ThumbHash may contain slashes that could break the url when the slash is at the beginning.\n    // We replace slashes with backslashes to make sure we don't break the url's path.\n    var thumbhash = str.replace(/^thumbhash:\\//, '').replace(/\\//g, '\\\\');\n    return {\n      uri: hashToUri('thumbhash', thumbhash)\n    };\n  }\n});","lineCount":52,"map":[[12,2,15,0,"exports"],[12,9,15,0],[12,10,15,0,"resolveBlurhashString"],[12,31,15,0],[12,34,15,0,"resolveBlurhashString"],[12,55,15,0],[13,2,29,0,"exports"],[13,9,29,0],[13,10,29,0,"resolveThumbhashString"],[13,32,29,0],[13,35,29,0,"resolveThumbhashString"],[13,57,29,0],[14,2,36,1],[14,6,36,1,"_babelRuntimeHelpersSlicedToArray"],[14,39,36,1],[14,42,36,1,"require"],[14,49,36,1],[14,50,36,1,"_dependencyMap"],[14,64,36,1],[15,2,36,1],[15,6,36,1,"_slicedToArray"],[15,20,36,1],[15,23,36,1,"_interopDefault"],[15,38,36,1],[15,39,36,1,"_babelRuntimeHelpersSlicedToArray"],[15,72,36,1],[16,2,5,0],[16,11,5,9,"hashToUri"],[16,20,5,18,"hashToUri"],[16,21,5,19,"type"],[16,25,5,38],[16,27,5,40,"hash"],[16,31,5,52],[16,33,5,62],[17,4,6,2],[17,8,6,8,"encodedBlurhash"],[17,23,6,23],[17,26,6,26,"encodeURI"],[17,35,6,35],[17,36,6,36,"hash"],[17,40,6,40],[17,41,6,41],[17,42,6,42,"replace"],[17,49,6,49],[17,50,6,50],[17,54,6,54],[17,56,6,56],[17,61,6,61],[17,62,6,62],[17,63,6,63,"replace"],[17,70,6,70],[17,71,6,71],[17,76,6,76],[17,78,6,78],[17,83,6,83],[17,84,6,84],[18,4,7,2],[18,11,7,9],[18,14,7,12,"type"],[18,18,7,16],[18,23,7,21,"encodedBlurhash"],[18,38,7,36],[18,40,7,38],[19,2,8,0],[21,2,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,2,15,7],[26,11,15,16,"resolveBlurhashString"],[26,32,15,37,"resolveBlurhashString"],[26,33,15,38,"str"],[26,36,15,49],[26,38,15,64],[27,4,16,2],[27,8,16,2,"_str$replace$split"],[27,26,16,2],[27,29,16,36,"str"],[27,32,16,39],[27,33,16,40,"replace"],[27,40,16,47],[27,41,16,48],[27,55,16,62],[27,57,16,64],[27,59,16,66],[27,60,16,67],[27,61,16,68,"split"],[27,66,16,73],[27,67,16,74],[27,70,16,77],[27,71,16,78],[28,6,16,78,"_str$replace$split2"],[28,25,16,78],[28,32,16,78,"_slicedToArray"],[28,46,16,78],[28,47,16,78,"default"],[28,54,16,78],[28,56,16,78,"_str$replace$split"],[28,74,16,78],[29,6,16,9,"blurhash"],[29,14,16,17],[29,17,16,17,"_str$replace$split2"],[29,36,16,17],[30,6,16,19,"width"],[30,11,16,24],[30,14,16,24,"_str$replace$split2"],[30,33,16,24],[31,6,16,26,"height"],[31,12,16,32],[31,15,16,32,"_str$replace$split2"],[31,34,16,32],[32,4,17,2],[32,11,17,9],[33,6,18,4,"uri"],[33,9,18,7],[33,11,18,9,"hashToUri"],[33,20,18,18],[33,21,18,19],[33,31,18,29],[33,33,18,31,"blurhash"],[33,41,18,39],[33,42,18,40],[34,6,19,4,"width"],[34,11,19,9],[34,13,19,11,"parseInt"],[34,21,19,19],[34,22,19,20,"width"],[34,27,19,25],[34,29,19,27],[34,31,19,29],[34,32,19,30],[34,36,19,34],[34,38,19,36],[35,6,20,4,"height"],[35,12,20,10],[35,14,20,12,"parseInt"],[35,22,20,20],[35,23,20,21,"height"],[35,29,20,27],[35,31,20,29],[35,33,20,31],[35,34,20,32],[35,38,20,36],[36,4,21,2],[36,5,21,3],[37,2,22,0],[39,2,24,0],[40,0,25,0],[41,0,26,0],[42,0,27,0],[43,0,28,0],[44,2,29,7],[44,11,29,16,"resolveThumbhashString"],[44,33,29,38,"resolveThumbhashString"],[44,34,29,39,"str"],[44,37,29,50],[44,39,29,65],[45,4,30,2],[46,4,31,2],[47,4,32,2],[47,8,32,8,"thumbhash"],[47,17,32,17],[47,20,32,20,"str"],[47,23,32,23],[47,24,32,24,"replace"],[47,31,32,31],[47,32,32,32],[47,47,32,47],[47,49,32,49],[47,51,32,51],[47,52,32,52],[47,53,32,53,"replace"],[47,60,32,60],[47,61,32,61],[47,66,32,66],[47,68,32,68],[47,72,32,72],[47,73,32,73],[48,4,33,2],[48,11,33,9],[49,6,34,4,"uri"],[49,9,34,7],[49,11,34,9,"hashToUri"],[49,20,34,18],[49,21,34,19],[49,32,34,30],[49,34,34,32,"thumbhash"],[49,43,34,41],[50,4,35,2],[50,5,35,3],[51,2,36,0],[52,0,36,1],[52,3]],"functionMap":{"names":["<global>","hashToUri","resolveBlurhashString","resolveThumbhashString"],"mappings":"AAA;ACI;CDG;OEO;CFO;OGO;CHO"},"hasCjsExports":false},"type":"js/module"}]}