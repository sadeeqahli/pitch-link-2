{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  var linear = function linear(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n    var a = _ref2[0];\n    var b = _ref2[1];\n    var _ref32 = _slicedToArray(_ref3, 2);\n    var c = _ref32[0];\n    var d = _ref32[1];\n    var f = function f(x) {\n      return c + (d - c) * (x - a) / (b - a);\n    };\n    f.inverse = function () {\n      return linear([c, d], [a, b]);\n    };\n    return f;\n  };\n  exports[\"default\"] = linear;\n  module.exports = exports[\"default\"];\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,7,0],[7,6,7,4,"_slicedToArray"],[7,20,7,18],[7,23,7,22],[7,35,7,34],[8,4,7,36],[8,13,7,45,"sliceIterator"],[8,26,7,58,"sliceIterator"],[8,27,7,59,"arr"],[8,30,7,62],[8,32,7,64,"i"],[8,33,7,65],[8,35,7,67],[9,6,7,69],[9,10,7,73,"_arr"],[9,14,7,77],[9,17,7,80],[9,19,7,82],[10,6,7,84],[10,10,7,88,"_n"],[10,12,7,90],[10,15,7,93],[10,19,7,97],[11,6,7,99],[11,10,7,103,"_d"],[11,12,7,105],[11,15,7,108],[11,20,7,113],[12,6,7,115],[12,10,7,119,"_e"],[12,12,7,121],[12,15,7,124,"undefined"],[12,24,7,133],[13,6,7,135],[13,10,7,139],[14,8,7,141],[14,13,7,146],[14,17,7,150,"_i"],[14,19,7,152],[14,22,7,155,"arr"],[14,25,7,158],[14,26,7,159,"Symbol"],[14,32,7,165],[14,33,7,166,"iterator"],[14,41,7,174],[14,42,7,175],[14,43,7,176],[14,44,7,177],[14,46,7,179,"_s"],[14,48,7,181],[14,50,7,183],[14,52,7,185,"_n"],[14,54,7,187],[14,57,7,190],[14,58,7,191,"_s"],[14,60,7,193],[14,63,7,196,"_i"],[14,65,7,198],[14,66,7,199,"next"],[14,70,7,203],[14,71,7,204],[14,72,7,205],[14,74,7,207,"done"],[14,78,7,211],[14,79,7,212],[14,81,7,214,"_n"],[14,83,7,216],[14,86,7,219],[14,90,7,223],[14,92,7,225],[15,10,7,227,"_arr"],[15,14,7,231],[15,15,7,232,"push"],[15,19,7,236],[15,20,7,237,"_s"],[15,22,7,239],[15,23,7,240,"value"],[15,28,7,245],[15,29,7,246],[16,10,7,248],[16,14,7,252,"i"],[16,15,7,253],[16,19,7,257,"_arr"],[16,23,7,261],[16,24,7,262,"length"],[16,30,7,268],[16,35,7,273,"i"],[16,36,7,274],[16,38,7,276],[17,8,7,283],[18,6,7,285],[18,7,7,286],[18,8,7,287],[18,15,7,294,"err"],[18,18,7,297],[18,20,7,299],[19,8,7,301,"_d"],[19,10,7,303],[19,13,7,306],[19,17,7,310],[20,8,7,312,"_e"],[20,10,7,314],[20,13,7,317,"err"],[20,16,7,320],[21,6,7,322],[21,7,7,323],[21,16,7,332],[22,8,7,334],[22,12,7,338],[23,10,7,340],[23,14,7,344],[23,15,7,345,"_n"],[23,17,7,347],[23,21,7,351,"_i"],[23,23,7,353],[23,24,7,354],[23,32,7,362],[23,33,7,363],[23,35,7,365,"_i"],[23,37,7,367],[23,38,7,368],[23,46,7,376],[23,47,7,377],[23,48,7,378],[23,49,7,379],[24,8,7,381],[24,9,7,382],[24,18,7,391],[25,10,7,393],[25,14,7,397,"_d"],[25,16,7,399],[25,18,7,401],[25,24,7,407,"_e"],[25,26,7,409],[26,8,7,411],[27,6,7,413],[28,6,7,415],[28,13,7,422,"_arr"],[28,17,7,426],[29,4,7,428],[30,4,7,430],[30,11,7,437],[30,21,7,447,"arr"],[30,24,7,450],[30,26,7,452,"i"],[30,27,7,453],[30,29,7,455],[31,6,7,457],[31,10,7,461,"Array"],[31,15,7,466],[31,16,7,467,"isArray"],[31,23,7,474],[31,24,7,475,"arr"],[31,27,7,478],[31,28,7,479],[31,30,7,481],[32,8,7,483],[32,15,7,490,"arr"],[32,18,7,493],[33,6,7,495],[33,7,7,496],[33,13,7,502],[33,17,7,506,"Symbol"],[33,23,7,512],[33,24,7,513,"iterator"],[33,32,7,521],[33,36,7,525,"Object"],[33,42,7,531],[33,43,7,532,"arr"],[33,46,7,535],[33,47,7,536],[33,49,7,538],[34,8,7,540],[34,15,7,547,"sliceIterator"],[34,28,7,560],[34,29,7,561,"arr"],[34,32,7,564],[34,34,7,566,"i"],[34,35,7,567],[34,36,7,568],[35,6,7,570],[35,7,7,571],[35,13,7,577],[36,8,7,579],[36,14,7,585],[36,18,7,589,"TypeError"],[36,27,7,598],[36,28,7,599],[36,82,7,653],[36,83,7,654],[37,6,7,656],[38,4,7,658],[38,5,7,659],[39,2,7,661],[39,3,7,662],[39,4,7,664],[39,5,7,665],[40,2,9,0],[40,6,9,4,"linear"],[40,12,9,10],[40,15,9,13],[40,24,9,22,"linear"],[40,30,9,28,"linear"],[40,31,9,29,"_ref"],[40,35,9,33],[40,37,9,35,"_ref3"],[40,42,9,40],[40,44,9,42],[41,4,10,2],[41,8,10,6,"_ref2"],[41,13,10,11],[41,16,10,14,"_slicedToArray"],[41,30,10,28],[41,31,10,29,"_ref"],[41,35,10,33],[41,37,10,35],[41,38,10,36],[41,39,10,37],[42,4,12,2],[42,8,12,6,"a"],[42,9,12,7],[42,12,12,10,"_ref2"],[42,17,12,15],[42,18,12,16],[42,19,12,17],[42,20,12,18],[43,4,13,2],[43,8,13,6,"b"],[43,9,13,7],[43,12,13,10,"_ref2"],[43,17,13,15],[43,18,13,16],[43,19,13,17],[43,20,13,18],[44,4,15,2],[44,8,15,6,"_ref32"],[44,14,15,12],[44,17,15,15,"_slicedToArray"],[44,31,15,29],[44,32,15,30,"_ref3"],[44,37,15,35],[44,39,15,37],[44,40,15,38],[44,41,15,39],[45,4,17,2],[45,8,17,6,"c"],[45,9,17,7],[45,12,17,10,"_ref32"],[45,18,17,16],[45,19,17,17],[45,20,17,18],[45,21,17,19],[46,4,18,2],[46,8,18,6,"d"],[46,9,18,7],[46,12,18,10,"_ref32"],[46,18,18,16],[46,19,18,17],[46,20,18,18],[46,21,18,19],[47,4,20,2],[47,8,20,6,"f"],[47,9,20,7],[47,12,20,10],[47,21,20,19,"f"],[47,22,20,20,"f"],[47,23,20,21,"x"],[47,24,20,22],[47,26,20,24],[48,6,21,4],[48,13,21,11,"c"],[48,14,21,12],[48,17,21,15],[48,18,21,16,"d"],[48,19,21,17],[48,22,21,20,"c"],[48,23,21,21],[48,28,21,26,"x"],[48,29,21,27],[48,32,21,30,"a"],[48,33,21,31],[48,34,21,32],[48,38,21,36,"b"],[48,39,21,37],[48,42,21,40,"a"],[48,43,21,41],[48,44,21,42],[49,4,22,2],[49,5,22,3],[50,4,24,2,"f"],[50,5,24,3],[50,6,24,4,"inverse"],[50,13,24,11],[50,16,24,14],[50,28,24,26],[51,6,25,4],[51,13,25,11,"linear"],[51,19,25,17],[51,20,25,18],[51,21,25,19,"c"],[51,22,25,20],[51,24,25,22,"d"],[51,25,25,23],[51,26,25,24],[51,28,25,26],[51,29,25,27,"a"],[51,30,25,28],[51,32,25,30,"b"],[51,33,25,31],[51,34,25,32],[51,35,25,33],[52,4,26,2],[52,5,26,3],[53,4,27,2],[53,11,27,9,"f"],[53,12,27,10],[54,2,28,0],[54,3,28,1],[55,2,30,0,"exports"],[55,9,30,7],[55,10,30,8],[55,19,30,17],[55,20,30,18],[55,23,30,21,"linear"],[55,29,30,27],[56,2,31,0,"module"],[56,8,31,6],[56,9,31,7,"exports"],[56,16,31,14],[56,19,31,17,"exports"],[56,26,31,24],[56,27,31,25],[56,36,31,34],[56,37,31,35],[57,0,31,36],[57,3]],"functionMap":{"names":["<global>","<anonymous>","sliceIterator","linear","f","f.inverse"],"mappings":"AAA;sBCM,cC,yYD,yOD;aGE;UCW;GDE;cEE;GFE;CHE"},"hasCjsExports":true},"type":"js/module"}]}